<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" media="screen" href="/~d/styles/atom10full.xsl"?><?xml-stylesheet type="text/css" media="screen" href="http://feeds.feedburner.com/~d/styles/itemcontent.css"?><feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0"><title>JBoss Tools Aggregated Feed</title><link rel="alternate" href="http://tools.jboss.org" /><subtitle>JBoss Tools Aggregated Feed</subtitle><dc:creator>JBoss Tools</dc:creator><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="self" type="application/atom+xml" href="http://feeds.feedburner.com/jbossbuzz" /><feedburner:info uri="jbossbuzz" /><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="hub" href="http://pubsubhubbub.appspot.com/" /><entry><title>Jakarta EE and the future</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/KnwOKmCj-5Q/jakarta-ee-and-the-future" /><category term="EAP" scheme="searchisko:content:tags" /><category term="feed_group_name_management" scheme="searchisko:content:tags" /><category term="feed_name_marklittle" scheme="searchisko:content:tags" /><category term="jakarta" scheme="searchisko:content:tags" /><category term="jakarta ee" scheme="searchisko:content:tags" /><category term="Java EE" scheme="searchisko:content:tags" /><category term="microprofile" scheme="searchisko:content:tags" /><category term="wildly" scheme="searchisko:content:tags" /><author><name>Mark Little</name></author><id>searchisko:content:id:jbossorg_blog-jakarta_ee_and_the_future</id><updated>2019-05-03T14:47:52Z</updated><published>2019-05-03T14:01:51Z</published><content type="html">&lt;!-- [DocumentBodyStart:a62b9660-c591-460d-a2a8-b27a0a717b1e] --&gt;&lt;div class="jive-rendered-content"&gt;&lt;p&gt;Some things never quite go the way you expect or the way you want. Sometimes that means you get a pleasant surprise. &lt;a class="jive-link-external-small" href="https://eclipse-foundation.blog/2019/05/03/jakarta-ee-java-trademarks/" rel="nofollow"&gt;Sometimes it doesn&amp;#8217;t&lt;/a&gt;. When Red Hat, IBM, Tomitribe and Oracle stood together on stage back in 2017 to announce we were working together on moving all of Java EE 8 to an independent foundation, I think we all believed this was the next chapter for Enterprise Java.&amp;#160; Oracle has made the decision to enable the wider ecosystem to build more freely on the work of so many individuals over the previous 15+ years. It was a risk for everyone on that stage but probably no more so than for Oracle as they, via Sun Microsystems before them, had invested so much into Java EE over the years.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;As the work progressed and we chose the Eclipse Foundation, we found a lot of interest in the community and even vendors who had previously eschewed Java EE, such as Microsoft, joined the work. Collectively we created the logo, various working groups, the Steering Committee, and presentation after presentation at various conferences and workshops. It really did begin to feel that we were back when J2EE was young and there was huge interest in its direction.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;However, through all of this what those outside the Steering Committee didn&amp;#8217;t see (couldn&amp;#8217;t see) was the intense effort going on between Oracle and the Eclipse Foundation around the transfer of IP such that we could all go and evolve specifications which Oracle, Sun or others had traditionally driven through the JCP. There were lots of questions and concerns the teams had to address, such as: Could we keep the names? Could we evolve the javax namespace? At times it seemed like progress was being made only for something else to come up which further delayed things.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;In the end, as the reader is likely already aware if the above link was clicked, it has not been possible for Oracle and the Eclipse Foundation to come to an agreement on a seamless transition for beyond Jakarta EE 8. To say that I&amp;#8217;m disappointed is an understatement. We came so close to enabling a seamless future for Jakarta EE only for it to be pulled from our collective grasp. I&amp;#8217;m not going to lay any blame for this because that doesn&amp;#8217;t get us anywhere. I do want to say thanks to the Oracle engineering and PM teams involved from the start. Without people like Will Lyons and Tom Snyder, to name but two from the many others involved, I&amp;#8217;m sure we wouldn&amp;#8217;t have gotten as far and as close as we did. They suffered a lot of frustrations from Red Hat and others, likely also from their own legal team. They were in the middle of things and stayed sane and cooperative throughout. I&amp;#8217;m pretty sure this isn&amp;#8217;t the outcome they had wanted or expected. And of course it would be remiss of me to ignore the Eclipse Foundation team for trying their hardest too and likely equally disappointed.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;So what next? Well let&amp;#8217;s not forget that we haven&amp;#8217;t finished Jakarta EE 8 yet (which will remain using the javax namespace). Therefore, we&amp;#8217;ve got more work to do to finalise that and get various implementations out, including our very own WildFly and EAP; Red Hat remains committed to this effort. Getting to a Jakarta EE 8 release is a fantastic and important accomplishment which will help the great many community members, vendors and users who have Java EE deployments. It will ensure that Java EE 8 and Jakarta EE 8 users can move between the two with ease.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;However, what are the steps beyond Jakarta EE 8? There are a couple that I see and I&amp;#8217;m sure there will be others:&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;As a community of users and developers we could try to move Jakarta EE forward but it isn&amp;#8217;t going to be as simple as we had originally hoped. We have to change the javax namespace, update implementations, TCK, change the names of specifications for anything that we want to evolve and clearly that is going to have an impact on compatibility. Then if we (the community) decided that is an investment worth making, we will have to determine whether we do that wholesale up front, i.e., change everything immediately after Jakarta EE 8 is out just to be over and done with it, or do it when and if changes are really needed. Each option has its pros and cons (exercise left to reader). Also, new specifications under a different namespace can be added to Jakarta EE moving forward if we decided not to evolve any of the current specifications.&lt;/li&gt;&lt;li&gt;If we decided to evolve only those specifications, TCKs, RIs etc. when and if needed then a parallel question should be whether Jakarta EE is the right place to do it or should this be elsewhere? If it&amp;#8217;s Jakarta EE then it needs the community to have agreed definitively that there is a future for Jakarta EE and the existing specifications it embodies which requires them to evolve, regardless of any potential impact from this recent announcement. If the community cannot make that agreement then perhaps component pieces, such as CDI or JAX-RS, have life beyond even if they also have to be changed - the assumption here would likely have to be that any re-coding around the javax namespace would have more limited impact due to the more focussed use cases. If that were to be the community&amp;#8217;s choice then I believe Eclipse MicroProfile would be the right place because it&amp;#8217;s already supported by a large and similar group of community and vendors.&lt;/li&gt;&lt;/ul&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;Therefore, let&amp;#8217;s not focus on the past or what could have been with Jakarta EE. Someone else may analyse the in&amp;#8217;s and out&amp;#8217;s of the work when they come to write the history of Enterprise Java in the future, but for now we&amp;#8217;d be better off looking to that future and collaborating where it makes sense. The community now have a number of key questions to answer, including how do we move forward under the Eclipse Foundation banner and evolve cloud-native Java?&lt;/p&gt;&lt;/div&gt;&lt;!-- [DocumentBodyEnd:a62b9660-c591-460d-a2a8-b27a0a717b1e] --&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/KnwOKmCj-5Q" height="1" width="1" alt=""/&gt;</content><summary>Some things never quite go the way you expect or the way you want. Sometimes that means you get a pleasant surprise. Sometimes it doesn’t. When Red Hat, IBM, Tomitribe and Oracle stood together on stage back in 2017 to announce we were working together on moving all of Java EE 8 to an independent foundation, I think we all believed this was the next chapter for Enterprise Java.  Oracle has made th...</summary><dc:creator>Mark Little</dc:creator><dc:date>2019-05-03T14:01:51Z</dc:date><feedburner:origLink>https://developer.jboss.org/blogs/mark.little/2019/05/03/jakarta-ee-and-the-future</feedburner:origLink></entry><entry><title>Announcing odo: Developer-focused CLI for Red Hat OpenShift</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/H7DjCNN4OVo/" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="odo" scheme="searchisko:content:tags" /><category term="openshift" scheme="searchisko:content:tags" /><category term="OpenShift Enterprise by Red Hat" scheme="searchisko:content:tags" /><author><name>Charlie Drage</name></author><id>searchisko:content:id:jbossorg_blog-announcing_odo_developer_focused_cli_for_red_hat_openshift</id><updated>2019-05-03T07:02:52Z</updated><published>2019-05-03T07:02:52Z</published><content type="html">&lt;p&gt;Following the first announcement of odo&lt;a href="https://blog.openshift.com/developing-applications-on-openshift-in-an-easier-way/"&gt; earlier in the year&lt;/a&gt;, we are pleased to announce the beta release of odo, an official project hosted on the &lt;a href="https://github.com/openshift/odo"&gt;OpenShift GitHub repository&lt;/a&gt;. After months of hard work, the beta release indicates that the API is stable and that functionality going forward will not change.&lt;/p&gt; &lt;p&gt;OpenShift Do (odo, for short) is a fast and straightforward CLI for developers who write, build, and iterate constantly on their source code. Instead of using more-refined tools such as &lt;code&gt;oc&lt;/code&gt;, &lt;code&gt;odo&lt;/code&gt; focuses on the iterative inner-loop cycle of coding (iterating on code changes prior to committing to Git) rather than the management of each application deployed to OpenShift. This article provides an overview of odo&amp;#8217;s functionality.&lt;/p&gt; &lt;p&gt;&lt;span id="more-591817"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;We have created &lt;a href="https://github.com/openshift/odo"&gt;odo&lt;/a&gt; as a tool for developers to focus on their source code rather than worry about deployment scenarios. It’s as easy as having odo know about your source code by using &lt;code&gt;odo create&lt;/code&gt; and specifying the framework for your application. Whether you’re pushing source code or a binary, odo will be smart enough with &lt;code&gt;odo push&lt;/code&gt; to know how to run or build it as needed.&lt;/p&gt; &lt;p&gt;With odo, you can iterate on your source code and watch as odo automatically validates and deploys the source code to OpenShift with one simple command: &lt;code&gt;odo watch&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;Red Hat OpenShift is an on-premise platform built around containers and on top of Kubernetes, providing developers with a user interface and command line to deploy their applications. OpenShift automates the build, deployment, and management of all applications so you can focus on what matters most: code.&lt;/p&gt; &lt;p&gt;When first developing applications on Red Hat OpenShift, developers typically accomplish their tasks in this order:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Connect to an OpenShift cluster.&lt;/li&gt; &lt;li&gt;Package their source code into a Docker image &lt;i&gt;or&lt;/i&gt; use a template or Source-2-Image.&lt;/li&gt; &lt;li&gt;Go through either OpenShift reference documentation &lt;i&gt;or&lt;/i&gt; follow the step-by-step GUI on OpenShift Console.&lt;/li&gt; &lt;li&gt;Use &lt;code&gt;oc&lt;/code&gt; or OpenShift Console to deploy their application.&lt;/li&gt; &lt;li&gt;Modify their source code and re-deploy the application.&lt;/li&gt; &lt;li&gt;Check that the source code has been deployed correctly and works.&lt;/li&gt; &lt;li&gt;Repeat the above steps until satisfied.&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;Odo automates the workflow by combining steps 2 through 6.&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Connect to an OpenShift cluster.&lt;/li&gt; &lt;li&gt;Create your application and define it with &lt;code&gt;odo create&lt;/code&gt;.&lt;/li&gt; &lt;li&gt;Deploy your application with &lt;code&gt;odo push&lt;/code&gt;. This can either be source code or binary data.&lt;/li&gt; &lt;li&gt;Iterate or have odo automatically push new local changes with &lt;code&gt;odo watch&lt;/code&gt;.&lt;/li&gt; &lt;/ol&gt; &lt;h2&gt;Odo features&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;Simple and easy deployment centered around similar concepts such as project, application, and component.&lt;/li&gt; &lt;li&gt;Completely client-based, no server required.&lt;/li&gt; &lt;li&gt;Supports multiple languages and frameworks (Node.js, Java, Ruby, Perl, PHP, and Python)&lt;/li&gt; &lt;li&gt;Detects changes to local source and pushes it to the cluster accordingly, giving instant feedback to any build changes in real-time.&lt;/li&gt; &lt;li&gt;Lists all available and deployment components to the OpenShift cluster. Configure locally, deploy anywhere.&lt;/li&gt; &lt;/ul&gt; &lt;h3&gt;&lt;b&gt;Demonstration&lt;/b&gt;&lt;/h3&gt; &lt;p&gt;The following is a demonstration on deploying an example Node.js application to a Red Hat OpenShift cluster:&lt;/p&gt; &lt;p&gt;&lt;img class=" alignnone wp-image-591827 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/04/Screenshot-from-2019-04-26-09-41-49.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/04/Screenshot-from-2019-04-26-09-41-49-300x168.png" alt="" width="300" height="168" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/04/Screenshot-from-2019-04-26-09-41-49-300x168.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/04/Screenshot-from-2019-04-26-09-41-49.png 678w" sizes="(max-width: 300px) 100vw, 300px" /&gt;&lt;/p&gt; &lt;p&gt;Asciilink: &lt;a href="https://asciinema.org/a/225717"&gt;https://asciinema.org/a/225717&lt;/a&gt;&lt;/p&gt; &lt;h3&gt;&lt;b&gt;Upcoming tutorials and workshops&lt;/b&gt;&lt;/h3&gt; &lt;p&gt;At &lt;a href="https://www.redhat.com/en/summit/2019?intcmp=701f20000012i8UAAQ"&gt;Red Hat Summit&lt;/a&gt;, you can attend the “Put the dev back in DevOps: Cloud-native at local speed” breakout session, on Tuesday, May 7 at 3:45 p.m., where Jorge Morales will walk you through some of the drivers of odo, talk about other competing tools, and show it in action.&lt;/p&gt; &lt;p&gt;If you prefer a deep dive workshop, Jan Kleinert will lead “Developing applications on Red Hat OpenShift as mere mortals” on Thursday, May 9 at 10:45 a.m., a two-hour hands-on workshop introducing odo in more depth.&lt;/p&gt; &lt;h3&gt;&lt;b&gt;What’s next?&lt;/b&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;Check out our GitHub repository: &lt;a href="https://github.com/openshift/odo"&gt;https://github.com/openshift/odo&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;Get started with your source code and deploy your application. Follow our getting started guide: &lt;a href="https://github.com/openshift/odo/blob/master/docs/getting-started.adoc"&gt;https://github.com/openshift/odo/blob/master/docs/getting-started.adoc&lt;/a&gt;.&lt;/li&gt; &lt;/ul&gt; &lt;h3&gt;Additional reading&lt;/h3&gt; &lt;p&gt;&amp;#8220;&lt;a href="https://developers.redhat.com/blog/?p=591037"&gt;Easing application development on OpenShift with odo&lt;/a&gt;&amp;#8221; by Jorge Morales Pou&lt;/p&gt; &lt;p&gt;&lt;strong&gt;If you haven’t registered for Red Hat Summit yet, &lt;a href="https://www.redhat.com/en/summit/2019?intcmp=701f20000012i8UAAQ"&gt;sign up now to attend&lt;/a&gt;. See you in Boston!&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F03%2Fannouncing-odo-developer-focused-cli-for-red-hat-openshift%2F&amp;#38;linkname=Announcing%20odo%3A%20Developer-focused%20CLI%20for%20Red%20Hat%20OpenShift" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F03%2Fannouncing-odo-developer-focused-cli-for-red-hat-openshift%2F&amp;#38;linkname=Announcing%20odo%3A%20Developer-focused%20CLI%20for%20Red%20Hat%20OpenShift" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F03%2Fannouncing-odo-developer-focused-cli-for-red-hat-openshift%2F&amp;#38;linkname=Announcing%20odo%3A%20Developer-focused%20CLI%20for%20Red%20Hat%20OpenShift" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F03%2Fannouncing-odo-developer-focused-cli-for-red-hat-openshift%2F&amp;#38;linkname=Announcing%20odo%3A%20Developer-focused%20CLI%20for%20Red%20Hat%20OpenShift" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F03%2Fannouncing-odo-developer-focused-cli-for-red-hat-openshift%2F&amp;#38;linkname=Announcing%20odo%3A%20Developer-focused%20CLI%20for%20Red%20Hat%20OpenShift" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F03%2Fannouncing-odo-developer-focused-cli-for-red-hat-openshift%2F&amp;#38;linkname=Announcing%20odo%3A%20Developer-focused%20CLI%20for%20Red%20Hat%20OpenShift" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F03%2Fannouncing-odo-developer-focused-cli-for-red-hat-openshift%2F&amp;#38;linkname=Announcing%20odo%3A%20Developer-focused%20CLI%20for%20Red%20Hat%20OpenShift" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F03%2Fannouncing-odo-developer-focused-cli-for-red-hat-openshift%2F&amp;#38;linkname=Announcing%20odo%3A%20Developer-focused%20CLI%20for%20Red%20Hat%20OpenShift" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F03%2Fannouncing-odo-developer-focused-cli-for-red-hat-openshift%2F&amp;#038;title=Announcing%20odo%3A%20Developer-focused%20CLI%20for%20Red%20Hat%20OpenShift" data-a2a-url="https://developers.redhat.com/blog/2019/05/03/announcing-odo-developer-focused-cli-for-red-hat-openshift/" data-a2a-title="Announcing odo: Developer-focused CLI for Red Hat OpenShift"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/05/03/announcing-odo-developer-focused-cli-for-red-hat-openshift/"&gt;Announcing odo: Developer-focused CLI for Red Hat OpenShift&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/H7DjCNN4OVo" height="1" width="1" alt=""/&gt;</content><summary>Following the first announcement of odo earlier in the year, we are pleased to announce the beta release of odo, an official project hosted on the OpenShift GitHub repository. After months of hard work, the beta release indicates that the API is stable and that functionality going forward will not change. OpenShift Do (odo, for short) is a fast and straightforward CLI for developers who write, bui...</summary><dc:creator>Charlie Drage</dc:creator><dc:date>2019-05-03T07:02:52Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/05/03/announcing-odo-developer-focused-cli-for-red-hat-openshift/</feedburner:origLink></entry><entry><title>Easing application development on Red Hat OpenShift with odo</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/bp-DvZDD-Ms/" /><category term="Developer Tools" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="odo" scheme="searchisko:content:tags" /><category term="openshift" scheme="searchisko:content:tags" /><category term="OpenShift Container Platform" scheme="searchisko:content:tags" /><author><name>Jorge Morales Pou</name></author><id>searchisko:content:id:jbossorg_blog-easing_application_development_on_red_hat_openshift_with_odo</id><updated>2019-05-02T07:04:06Z</updated><published>2019-05-02T07:04:06Z</published><content type="html">&lt;p&gt;Have you ever developed applications on a platform like &lt;a href="https://www.openshift.com/learn/get-started/"&gt;Red Hat OpenShift&lt;/a&gt;?&lt;/p&gt; &lt;p&gt;I’m a &lt;a href="https://developers.redhat.com/topics/enterprise-java/"&gt;Java&lt;/a&gt; developer with more than 15 years of coding experience, and although I’ve been working with OpenShift for more than three years now, I haven&amp;#8217;t found it especially easy to use as a day-to-day development platform. Why? There are many reasons, but the key ones involve complexity and speed. In this article, I&amp;#8217;ll explain further and provide an introduction to the odo command-line tool.&lt;/p&gt; &lt;p&gt;&lt;span id="more-591037"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;As a Java developer, one of the things that I’ve done for a long time has been to build using &lt;a href="https://maven.apache.org/what-is-maven.html"&gt;Maven&lt;/a&gt;. Maven has provided me the ability to do &amp;#8220;almost anything&amp;#8221; I wanted with a simple command-line tool. Almost anything meant that I typically had my runtimes installed and available on my local machine, and Maven only had to deploy (or copy) the generated artifact into the appropriate location. Sometimes this triggered a restart of my runtime or just a reload if the integration with the runtime allowed for such fanciness.&lt;/p&gt; &lt;p&gt;It took me a long time to get used to Maven, but once I knew (more or less) how to use it, it was pretty cool. I could share my source code, with a pom.xml file to any of my colleagues, and they could build and test the application the same way I did.&lt;/p&gt; &lt;p&gt;The bigger challenge back then was not creating the application but ensuring that my fellow developers were running it the same way. The issue was that many of us installed our runtimes and databases locally on heterogeneous hardware, probably with different operating systems or at least different versions of the same OS.&lt;/p&gt; &lt;p&gt;The solution was to standardize our runtime environments. I was a fervent user of Vagrant. I created development environments using Vagrant, so all of us developers could use the same runtimes, with the same configuration and the same application that Maven built.&lt;/p&gt; &lt;h2&gt;Enter containers&lt;/h2&gt; &lt;p&gt;Fast-forward some years: containers took the place of these standardized runtime environments, and &lt;a href="https://developers.redhat.com/topics/kubernetes/"&gt;Kubernetes&lt;/a&gt; environments took the place of orchestrating all the pieces required for an application to run. You could now use Kubernetes locally, on your laptop, using Minikube or Minishift. But now, we also needed to create containers rather than applications, as these are the new artifacts. This posed a new challenge for me, and probably to many of you.&lt;/p&gt; &lt;p&gt;Building containers with your application in it can be a simple or complex process. There are a variety of tools that makes the process simpler. Tools that take your source code, build it, and incorporate the generated artifact into a container that already has the desired runtime your application would use.&lt;/p&gt; &lt;p&gt;OpenShift s2i is one of these mechanisms. Heroku and Cloud Foundry Buildpacks is another approach. As a Java developer, I think that these approaches work much better than dealing with a Dockerfile yourself.&lt;/p&gt; &lt;p&gt;Now, the platform you use to run your application can also build your application, as long as it can access the source code for it. But the process is slower than what you’re used to. And although slower can work sometimes—typically when you’re not waiting for it to complete—there are other times when you need the build and deployment to finish promptly to start your validation and testing, or just to continue your development work.&lt;/p&gt; &lt;p&gt;How can we make this process as fast as possible but also have your applications running on these wonderful environments (OpenShift or Kubernetes)?&lt;/p&gt; &lt;p&gt;We’ve been pondering this problem for a long time. We need a fast inner development loop, that is, code, build, deploy, test, code, build, deploy, test, again and again. We don’t want to push our code to a Git server for the platform to build it, as this is a longer process. And, we have to consider whether we should commit code to a Git server if we&amp;#8217;re not sure whether it works as it should.&lt;/p&gt; &lt;h2&gt;Command-line tool: odo&lt;/h2&gt; &lt;p&gt;With this premise in mind, we are building a command-line tool that we call &lt;code&gt;odo&lt;/code&gt;, which stands for &lt;code&gt;OpenShift Do&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;The logic behind this tool is simple. We deploy onto the platform specialized containers that know how to build an application and that also have the runtime for the application included and already running. We then only need to push the application to such containers.&lt;/p&gt; &lt;p&gt;For this, we have the option of pushing the source code and the container will create the artifact for us, or we can just push the artifact if we have already built it locally on our local machine. The tool used to push the application will then instruct the container to reload the runtime with the new application in it. This will only reload the runtime and not the whole container/pod, making the process as fast as it would be if I were hosting that runtime locally on my machine.&lt;/p&gt; &lt;p&gt;This is a development pod, which knows how to build and/or run my application. What is convenient, though, is that we can use a regular s2i container—one that OpenShift uses—for the process. We don’t need any special or additional capabilities.&lt;/p&gt; &lt;p&gt;Here is an example:&lt;/p&gt; &lt;p&gt;&lt;img class=" wp-image-591047 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/04/odo-example-1024x632.gif" src="https://developers.redhat.com/blog/wp-content/uploads/2019/04/odo-example-300x185.gif" alt="" width="632" height="370" /&gt;&lt;/p&gt; &lt;p&gt;As you can see, the process we went through is recognizable to you, even if you’re not an OpenShift or Kubernetes expert. How is that possible?&lt;/p&gt; &lt;h2&gt;Keep it simple&lt;/h2&gt; &lt;p&gt;We decided to make the tool as user (a.k.a. developer) friendly as possible. We are aware that many users don’t fully understand all the complex constructs a platform like OpenShift or Kubernetes provides, and we wanted to make the tool simple and immediately familiar. So, we decided the language the tool was going to provide should be natural to developers.&lt;/p&gt; &lt;p&gt;Another important observation we embodied in the tool is that developers usually work on a single component (part of an application) at a time. So, while developers can have a quite complex application (consisting of multiple deployed components or services), they are only going to work through the inner development loop of one of these components at a time. Thus, our CLI was built with the concept of a component at its center.&lt;/p&gt; &lt;p&gt;To create a component corresponding to the type of runtime of your application, you will select from one of the available component types in the catalog. Once you have the component created, you only need to push your code (or pre-built artifact) to it, the tool will do the rest. If you want to access your component, you create a URL. If you want to provide persistence for your component, you create storage for the component. If you want to configure your application, you create a config for your component.&lt;/p&gt; &lt;p&gt;All of these constructs have been designed with the developer experience in mind and should be straightforward to use for most developers, regardless of the programming language. Developers no longer need to know the specifics of the platform where their application will be deployed and running.&lt;/p&gt; &lt;h2&gt;More to come&lt;/h2&gt; &lt;p&gt;This is just an introduction to a project we’re developing. It’s currently under heavy development and only community supported. It’s already in a working state, but not yet complete. We want to hear your feedback. If you want to try it, head to the project’s page and read the &lt;a href="https://github.com/redhat-developer/odo#installing-odo"&gt;installation instructions&lt;/a&gt;. If you have feedback, please open an issue on the &lt;a href="https://github.com/redhat-developer/odo"&gt;project’s GitHub repository&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;In the coming weeks, we’ll be talking much more about this project. The current state, how specific features work, and what we have in mind for the future. Stay tuned.&lt;/p&gt; &lt;p&gt;Develop in your own style, forget about the platform!&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F02%2Feasing-application-development-on-openshift-with-odo%2F&amp;#38;linkname=Easing%20application%20development%20on%20Red%20Hat%20OpenShift%20with%20odo" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F02%2Feasing-application-development-on-openshift-with-odo%2F&amp;#38;linkname=Easing%20application%20development%20on%20Red%20Hat%20OpenShift%20with%20odo" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F02%2Feasing-application-development-on-openshift-with-odo%2F&amp;#38;linkname=Easing%20application%20development%20on%20Red%20Hat%20OpenShift%20with%20odo" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F02%2Feasing-application-development-on-openshift-with-odo%2F&amp;#38;linkname=Easing%20application%20development%20on%20Red%20Hat%20OpenShift%20with%20odo" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F02%2Feasing-application-development-on-openshift-with-odo%2F&amp;#38;linkname=Easing%20application%20development%20on%20Red%20Hat%20OpenShift%20with%20odo" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F02%2Feasing-application-development-on-openshift-with-odo%2F&amp;#38;linkname=Easing%20application%20development%20on%20Red%20Hat%20OpenShift%20with%20odo" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F02%2Feasing-application-development-on-openshift-with-odo%2F&amp;#38;linkname=Easing%20application%20development%20on%20Red%20Hat%20OpenShift%20with%20odo" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F02%2Feasing-application-development-on-openshift-with-odo%2F&amp;#38;linkname=Easing%20application%20development%20on%20Red%20Hat%20OpenShift%20with%20odo" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F02%2Feasing-application-development-on-openshift-with-odo%2F&amp;#038;title=Easing%20application%20development%20on%20Red%20Hat%20OpenShift%20with%20odo" data-a2a-url="https://developers.redhat.com/blog/2019/05/02/easing-application-development-on-openshift-with-odo/" data-a2a-title="Easing application development on Red Hat OpenShift with odo"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/05/02/easing-application-development-on-openshift-with-odo/"&gt;Easing application development on Red Hat OpenShift with odo&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/bp-DvZDD-Ms" height="1" width="1" alt=""/&gt;</content><summary>Have you ever developed applications on a platform like Red Hat OpenShift? I’m a Java developer with more than 15 years of coding experience, and although I’ve been working with OpenShift for more than three years now, I haven’t found it especially easy to use as a day-to-day development platform. Why? There are many reasons, but the key ones involve complexity and speed. In this article, I’ll exp...</summary><dc:creator>Jorge Morales Pou</dc:creator><dc:date>2019-05-02T07:04:06Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/05/02/easing-application-development-on-openshift-with-odo/</feedburner:origLink></entry><entry><title>Get started with Jenkins CI/CD in Red Hat OpenShift 4</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/FmElKWNEiFY/" /><category term="ci/cd" scheme="searchisko:content:tags" /><category term="cloud" scheme="searchisko:content:tags" /><category term="Containers" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="openshift" scheme="searchisko:content:tags" /><category term="OpenShift4" scheme="searchisko:content:tags" /><category term="Red Hat OpenShift" scheme="searchisko:content:tags" /><category term="Red Hat OpenShift Container Platform" scheme="searchisko:content:tags" /><author><name>Don Schenck</name></author><id>searchisko:content:id:jbossorg_blog-get_started_with_jenkins_ci_cd_in_red_hat_openshift_4</id><updated>2019-05-02T07:03:18Z</updated><published>2019-05-02T07:03:18Z</published><content type="html">&lt;p&gt;Automation is what we (developers) do. We automate ticket sales and automobiles and streaming music services and everything you can possibly tie into an analog-to-digital converter. But, have we taken the time to automate our processes?&lt;/p&gt; &lt;p&gt;In this article, I&amp;#8217;ll show how to build an automated integration and delivery pipeline using Jenkins CI/CD and Red Hat &lt;a href="https://www.openshift.com"&gt;OpenShift&lt;/a&gt; 4. I will not dive into a lot of details—and there are a &lt;em&gt;lot&lt;/em&gt; of details—but we&amp;#8217;ll get a good overview. The details will be explained later in this series of blog posts.&lt;/p&gt; &lt;p&gt;&lt;span id="more-587667"&gt;&lt;/span&gt;&lt;br /&gt; &lt;strong&gt;Note:&lt;/strong&gt; In this post, I&amp;#8217;ll sometimes refer to OpenShift 4 as OpenShift Container Platform (OCP).&lt;/p&gt; &lt;p&gt;It&amp;#8217;s not enough to start an OCP cluster. We need to get Jenkins up and running. Fortunately, OCP has templates, an ever-growing selection of environments that you can get up and running with a simple point and click (or at the command line). This catalog of templates, however, is not readily apparent in the OCP dashboard.&lt;/p&gt; &lt;p&gt;In the following screen capture, you&amp;#8217;ll notice that nine options are available:&lt;/p&gt; &lt;p&gt;&lt;img class=" alignnone size-full wp-image-587867 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/04/catalog-BEFORE.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/04/catalog-BEFORE.png" alt="" width="968" height="578" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/04/catalog-BEFORE.png 968w, https://developers.redhat.com/blog/wp-content/uploads/2019/04/catalog-BEFORE-300x179.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/04/catalog-BEFORE-768x459.png 768w" sizes="(max-width: 968px) 100vw, 968px" /&gt;&lt;/p&gt; &lt;h2&gt;Is that it?&lt;/h2&gt; &lt;p&gt;Nine items. You will also notice that Jenkins is not an option. But what if it is an option? The developer&amp;#8217;s friend—the command line—is where the catalog really springs to life. We can run the following command to see all of the templates that are included when we launch our OCP 4 cluster but are not visible on the dashboard:&lt;/p&gt; &lt;pre&gt;oc get templates -n openshift&lt;/pre&gt; &lt;p&gt;You&amp;#8217;ll see a list that&amp;#8217;s too long to show here—about 91 templates. As it stands, we can use them at the command line, and we will. A Template Service Broker is used to make them appear on the dashboard, but that&amp;#8217;s another article. For now, we&amp;#8217;ll use the command line.&lt;/p&gt; &lt;p&gt;If you look through the list, you&amp;#8217;ll find two templates for Jenkins:&lt;/p&gt; &lt;p&gt;&lt;img class=" alignnone size-full wp-image-590297 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/04/two-jenkins-1024x42.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/04/two-jenkins.png" alt="" width="1207" height="50" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/04/two-jenkins.png 1207w, https://developers.redhat.com/blog/wp-content/uploads/2019/04/two-jenkins-300x12.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/04/two-jenkins-768x32.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2019/04/two-jenkins-1024x42.png 1024w" sizes="(max-width: 1207px) 100vw, 1207px" /&gt;&lt;/p&gt; &lt;p&gt;Because we don&amp;#8217;t have persistent storage configured (that&amp;#8217;s yet another article), we&amp;#8217;ll use the &amp;#8220;Jenkins-ephemeral&amp;#8221; template for this article. The fundamentals are the same, and the knowledge is transferable, but this way we spend our time in this article on Jenkins and CI/CD and not on creating and configuring and using persistent storage.&lt;/p&gt; &lt;h2&gt;Give me Jenkins, now&lt;/h2&gt; &lt;p&gt;Let&amp;#8217;s start with the easy part: Getting Jenkins up and running inside our OCP 4 cluster. It&amp;#8217;s one command:&lt;/p&gt; &lt;pre&gt;oc new-app jenkins-ephemeral&lt;/pre&gt; &lt;p&gt;&lt;img class=" alignnone size-full wp-image-590337 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/04/oc-new-app-jenkins-ephemeral-1024x626.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/04/oc-new-app-jenkins-ephemeral.png" alt="" width="1220" height="746" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/04/oc-new-app-jenkins-ephemeral.png 1220w, https://developers.redhat.com/blog/wp-content/uploads/2019/04/oc-new-app-jenkins-ephemeral-300x183.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/04/oc-new-app-jenkins-ephemeral-768x470.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2019/04/oc-new-app-jenkins-ephemeral-1024x626.png 1024w" sizes="(max-width: 1220px) 100vw, 1220px" /&gt;&lt;/p&gt; &lt;p&gt;You can now run the following command to get the URL to your Jenkins installation:&lt;/p&gt; &lt;pre&gt;oc get routes&lt;/pre&gt; &lt;p&gt;&lt;img class=" alignnone size-full wp-image-590397 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/04/oc-get-routes-1024x59.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/04/oc-get-routes.png" alt="" width="1304" height="75" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/04/oc-get-routes.png 1304w, https://developers.redhat.com/blog/wp-content/uploads/2019/04/oc-get-routes-300x17.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/04/oc-get-routes-768x44.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2019/04/oc-get-routes-1024x59.png 1024w" sizes="(max-width: 1304px) 100vw, 1304px" /&gt;&lt;/p&gt; &lt;p&gt;Put that URL (&lt;code&gt;jenkins-default.apps.jenkins.rhdemos.com&lt;/code&gt;) into your browser and voilà &amp;#8230; Jenkins:&lt;/p&gt; &lt;p&gt;&lt;img class=" alignnone size-full wp-image-590407 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/04/voila-jenkins.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/04/voila-jenkins.png" alt="" width="760" height="459" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/04/voila-jenkins.png 760w, https://developers.redhat.com/blog/wp-content/uploads/2019/04/voila-jenkins-300x181.png 300w" sizes="(max-width: 760px) 100vw, 760px" /&gt;&lt;/p&gt; &lt;p&gt;By the way, if you want to see the template that did all this work, you can view it by using the following command:&lt;/p&gt; &lt;pre&gt;oc get template/jenkins-ephemeral -o json -n openshift&lt;/pre&gt; &lt;h2&gt;Jenkins, at your service&lt;/h2&gt; &lt;p&gt;Go ahead and log in with OpenShift, and select the &lt;em&gt;Allow Selected Permissions&lt;/em&gt; option. You&amp;#8217;ll then be presented with your Jenkins dashboard:&lt;/p&gt; &lt;p&gt;&lt;img class=" alignnone size-full wp-image-590437 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/04/welcome-to-jenkins.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/04/welcome-to-jenkins.png" alt="" width="813" height="382" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/04/welcome-to-jenkins.png 813w, https://developers.redhat.com/blog/wp-content/uploads/2019/04/welcome-to-jenkins-300x141.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/04/welcome-to-jenkins-768x361.png 768w" sizes="(max-width: 813px) 100vw, 813px" /&gt;&lt;/p&gt; &lt;h2&gt;Countdown to launch&lt;/h2&gt; &lt;p&gt;That was the easy part. Now the real work begins. We need to set up a pipeline to build our software, but we want to use the build that is built into OpenShift. The following command will create a build configuration (or &amp;#8220;build config,&amp;#8221; which is an object of type &amp;#8220;BuildConfig&amp;#8221;), which has the instructions we give to OpenShift to tell it how to build our application. In this particular case, we&amp;#8217;re creating a pipeline that, in turn, has the build instructions:&lt;/p&gt; &lt;pre&gt;oc create -f https://raw.githubusercontent.com/openshift/origin/master/examples/jenkins/pipeline/nodejs-sample-pipeline.yaml&lt;/pre&gt; &lt;p&gt;&lt;img class=" alignnone size-full wp-image-591847 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/04/create-pipeline-1024x33.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/04/create-pipeline.png" alt="" width="1887" height="61" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/04/create-pipeline.png 1887w, https://developers.redhat.com/blog/wp-content/uploads/2019/04/create-pipeline-300x10.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/04/create-pipeline-768x25.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2019/04/create-pipeline-1024x33.png 1024w" sizes="(max-width: 1887px) 100vw, 1887px" /&gt;&lt;/p&gt; &lt;p&gt;Don&amp;#8217;t sweat the details for now; we&amp;#8217;ll cover that in the next blog post. For this article, we simply want to see what&amp;#8217;s possible and get the creative gears turning.&lt;/p&gt; &lt;p&gt;Want to see the pipeline? Use the following command:&lt;/p&gt; &lt;pre&gt;oc get buildconfig/nodejs-sample-pipeline -o yaml&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; This build example is using Node.js, and I did all the work using a Windows PC running PowerShell. Open source and platform independent—that&amp;#8217;s the beauty of all this. That is, the &lt;code&gt;oc&lt;/code&gt; command works everywhere. Also; this example relies heavily on &lt;a href="https://github.com/openshift/origin/tree/master/examples/jenkins/pipeline"&gt;the OpenShift examples GitHub page&lt;/a&gt;.&lt;/p&gt; &lt;h2&gt;Where are we?&lt;/h2&gt; &lt;p&gt;At this point in Red Hat OpenShift, we have a build config for a pipeline. That&amp;#8217;s it. We haven&amp;#8217;t actually &lt;em&gt;built&lt;/em&gt; anything yet; we just have a configuration of a pipeline. We can see this—the fact that we haven&amp;#8217;t built anything—in two ways: We can look at the &lt;em&gt;Builds&lt;/em&gt; section of the OpenShift dashboard, and we can view the Jenkins dashboard. In both of them, we do &lt;em&gt;not&lt;/em&gt; see our pipeline—again, because we haven&amp;#8217;t built the pipeline.&lt;/p&gt; &lt;div id="attachment_591867" style="width: 850px" class="wp-caption alignnone"&gt;&lt;img aria-describedby="caption-attachment-591867" class=" alignnone size-full wp-image-591867 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/04/no-builds-found.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/04/no-builds-found.png" alt="" width="840" height="343" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/04/no-builds-found.png 840w, https://developers.redhat.com/blog/wp-content/uploads/2019/04/no-builds-found-300x123.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/04/no-builds-found-768x314.png 768w" sizes="(max-width: 840px) 100vw, 840px" /&gt;&lt;p id="caption-attachment-591867" class="wp-caption-text"&gt;No builds in the OpenShift dashboard.&lt;/p&gt;&lt;/div&gt; &lt;div id="attachment_591877" style="width: 905px" class="wp-caption alignnone"&gt;&lt;img aria-describedby="caption-attachment-591877" class=" alignnone size-full wp-image-591877 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/04/no-jenkins-pipelines.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/04/no-jenkins-pipelines.png" alt="" width="895" height="201" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/04/no-jenkins-pipelines.png 895w, https://developers.redhat.com/blog/wp-content/uploads/2019/04/no-jenkins-pipelines-300x67.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/04/no-jenkins-pipelines-768x172.png 768w" sizes="(max-width: 895px) 100vw, 895px" /&gt;&lt;p id="caption-attachment-591877" class="wp-caption-text"&gt;No pipelines (except the default which we should ignore).&lt;/p&gt;&lt;/div&gt; &lt;p&gt;By the way, if you look in the BuildConfig section of the OpenShift dashboard, you&amp;#8217;ll see our build config sitting there like a rocket that&amp;#8217;s ready for liftoff.&lt;/p&gt; &lt;h2&gt;Let&amp;#8217;s take it for a spin&lt;/h2&gt; &lt;p&gt;Now the magic happens. At the command line, we can run a command to see the name of the BuildConfig we want to build:&lt;/p&gt; &lt;pre&gt;oc get buildconfigs&lt;/pre&gt; &lt;div id="attachment_591887" style="width: 934px" class="wp-caption alignnone"&gt;&lt;img aria-describedby="caption-attachment-591887" class=" alignnone size-full wp-image-591887 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/04/oc-get-buildconfigs.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/04/oc-get-buildconfigs.png" alt="" width="924" height="62" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/04/oc-get-buildconfigs.png 924w, https://developers.redhat.com/blog/wp-content/uploads/2019/04/oc-get-buildconfigs-300x20.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/04/oc-get-buildconfigs-768x52.png 768w" sizes="(max-width: 924px) 100vw, 924px" /&gt;&lt;p id="caption-attachment-591887" class="wp-caption-text"&gt;There it is. Let&amp;#8217;s get this show on the road.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;We can start the build and then, for fun, switch over to the Jenkins dashboard to watch it run. Even better, while in Jenkins, select the &amp;#8220;Open Blue Ocean&amp;#8221; option on the menu (on the left side) to view things in a nice, modern interface instead of the, uh, &amp;#8220;classic&amp;#8221; Jenkins UI. You&amp;#8217;ll see the pipeline appear, from which you can follow the build. It may take a few seconds before it&amp;#8217;s available in Jenkins.&lt;/p&gt; &lt;p&gt;Use this command to kick off all the action:&lt;/p&gt; &lt;pre&gt;oc start-build nodejs-sample-pipeline&lt;/pre&gt; &lt;div id="attachment_591897" style="width: 1634px" class="wp-caption alignnone"&gt;&lt;img aria-describedby="caption-attachment-591897" class=" alignnone size-full wp-image-591897 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/04/pipeline-in-Jenkins-1024x403.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/04/pipeline-in-Jenkins.png" alt="" width="1624" height="639" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/04/pipeline-in-Jenkins.png 1624w, https://developers.redhat.com/blog/wp-content/uploads/2019/04/pipeline-in-Jenkins-300x118.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/04/pipeline-in-Jenkins-768x302.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2019/04/pipeline-in-Jenkins-1024x403.png 1024w" sizes="(max-width: 1624px) 100vw, 1624px" /&gt;&lt;p id="caption-attachment-591897" class="wp-caption-text"&gt;It&amp;#8217;s alive.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;The pipeline was built and the build was started. If you look in OpenShift, under &lt;em&gt;Builds&lt;/em&gt;, you&amp;#8217;ll see the two separate builds:&lt;/p&gt; &lt;p&gt;&lt;img class=" alignnone size-full wp-image-591907 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/04/two-builds.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/04/two-builds.png" alt="" width="895" height="125" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/04/two-builds.png 895w, https://developers.redhat.com/blog/wp-content/uploads/2019/04/two-builds-300x42.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/04/two-builds-768x107.png 768w" sizes="(max-width: 895px) 100vw, 895px" /&gt;&lt;/p&gt; &lt;h2&gt;The results&lt;/h2&gt; &lt;p&gt;Based on a combination of knowledge and a hunch, I bet there&amp;#8217;s a route for that &amp;#8220;nodejs-mongodb-example&amp;#8221; service. Running &lt;code&gt;oc get routes&lt;/code&gt; will confirm:&lt;/p&gt; &lt;p&gt;&lt;img class=" alignnone size-full wp-image-591917 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/04/get-routes-for-nodejs-1024x70.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/04/get-routes-for-nodejs.png" alt="" width="1169" height="80" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/04/get-routes-for-nodejs.png 1169w, https://developers.redhat.com/blog/wp-content/uploads/2019/04/get-routes-for-nodejs-300x21.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/04/get-routes-for-nodejs-768x53.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2019/04/get-routes-for-nodejs-1024x70.png 1024w" sizes="(max-width: 1169px) 100vw, 1169px" /&gt;&lt;/p&gt; &lt;p&gt;If I put that URL into a browser I should get:&lt;/p&gt; &lt;div id="attachment_591927" style="width: 861px" class="wp-caption alignnone"&gt;&lt;img aria-describedby="caption-attachment-591927" class=" alignnone size-full wp-image-591927 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/04/nodejs-example-in-browser.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/04/nodejs-example-in-browser.png" alt="" width="851" height="510" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/04/nodejs-example-in-browser.png 851w, https://developers.redhat.com/blog/wp-content/uploads/2019/04/nodejs-example-in-browser-300x180.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/04/nodejs-example-in-browser-768x460.png 768w" sizes="(max-width: 851px) 100vw, 851px" /&gt;&lt;p id="caption-attachment-591927" class="wp-caption-text"&gt;BAM. It worked.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; See that &amp;#8220;Deploying code changes&amp;#8221; section in the image? You might want to play around with that (hint, hint).&lt;/p&gt; &lt;h2&gt;We did it!&lt;/h2&gt; &lt;p&gt;Well, OpenShift and Jenkins did it. But we now have Jenkins building and deploying our solution.&lt;/p&gt; &lt;h2&gt;Next?&lt;/h2&gt; &lt;p&gt;There&amp;#8217;s a lot more we can do. Tests? Manual deployments? Deployments to other environments (e.g., dev, testing, staging, and production). Other programming languages? Additionally, this Jenkins environment doesn&amp;#8217;t have persistent storage—something we&amp;#8217;ll likely want in a real-world scenario. And, we need to dive even deeper to see what&amp;#8217;s going on and get a real understanding so we can build our own solutions.&lt;/p&gt; &lt;p&gt;There&amp;#8217;s a &lt;em&gt;lot&lt;/em&gt; more to come; watch this space for future articles.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F02%2Fget-started-with-jenkins-ci-cd-in-red-hat-openshift-4%2F&amp;#38;linkname=Get%20started%20with%20Jenkins%20CI%2FCD%20in%20Red%20Hat%20OpenShift%204" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F02%2Fget-started-with-jenkins-ci-cd-in-red-hat-openshift-4%2F&amp;#38;linkname=Get%20started%20with%20Jenkins%20CI%2FCD%20in%20Red%20Hat%20OpenShift%204" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F02%2Fget-started-with-jenkins-ci-cd-in-red-hat-openshift-4%2F&amp;#38;linkname=Get%20started%20with%20Jenkins%20CI%2FCD%20in%20Red%20Hat%20OpenShift%204" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F02%2Fget-started-with-jenkins-ci-cd-in-red-hat-openshift-4%2F&amp;#38;linkname=Get%20started%20with%20Jenkins%20CI%2FCD%20in%20Red%20Hat%20OpenShift%204" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F02%2Fget-started-with-jenkins-ci-cd-in-red-hat-openshift-4%2F&amp;#38;linkname=Get%20started%20with%20Jenkins%20CI%2FCD%20in%20Red%20Hat%20OpenShift%204" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F02%2Fget-started-with-jenkins-ci-cd-in-red-hat-openshift-4%2F&amp;#38;linkname=Get%20started%20with%20Jenkins%20CI%2FCD%20in%20Red%20Hat%20OpenShift%204" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F02%2Fget-started-with-jenkins-ci-cd-in-red-hat-openshift-4%2F&amp;#38;linkname=Get%20started%20with%20Jenkins%20CI%2FCD%20in%20Red%20Hat%20OpenShift%204" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F02%2Fget-started-with-jenkins-ci-cd-in-red-hat-openshift-4%2F&amp;#38;linkname=Get%20started%20with%20Jenkins%20CI%2FCD%20in%20Red%20Hat%20OpenShift%204" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F02%2Fget-started-with-jenkins-ci-cd-in-red-hat-openshift-4%2F&amp;#038;title=Get%20started%20with%20Jenkins%20CI%2FCD%20in%20Red%20Hat%20OpenShift%204" data-a2a-url="https://developers.redhat.com/blog/2019/05/02/get-started-with-jenkins-ci-cd-in-red-hat-openshift-4/" data-a2a-title="Get started with Jenkins CI/CD in Red Hat OpenShift 4"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/05/02/get-started-with-jenkins-ci-cd-in-red-hat-openshift-4/"&gt;Get started with Jenkins CI/CD in Red Hat OpenShift 4&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/FmElKWNEiFY" height="1" width="1" alt=""/&gt;</content><summary>Automation is what we (developers) do. We automate ticket sales and automobiles and streaming music services and everything you can possibly tie into an analog-to-digital converter. But, have we taken the time to automate our processes? In this article, I’ll show how to build an automated integration and delivery pipeline using Jenkins CI/CD and Red Hat OpenShift 4. I will not dive into a lot of d...</summary><dc:creator>Don Schenck</dc:creator><dc:date>2019-05-02T07:03:18Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/05/02/get-started-with-jenkins-ci-cd-in-red-hat-openshift-4/</feedburner:origLink></entry><entry><title>Red Hat Summit 2019: Road to Red Hat Enterprise Linux 8 Labs Roadmap</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/Hhnr4PKnR-4/red-hat-summit-2019-road-to-rhel8-labs-roadmap.html" /><category term="AppDev" scheme="searchisko:content:tags" /><category term="conference" scheme="searchisko:content:tags" /><category term="feed_group_name_global" scheme="searchisko:content:tags" /><category term="feed_name_ericschabell" scheme="searchisko:content:tags" /><category term="JBoss" scheme="searchisko:content:tags" /><author><name>Eric D. Schabell</name></author><id>searchisko:content:id:jbossorg_blog-red_hat_summit_2019_road_to_red_hat_enterprise_linux_8_labs_roadmap</id><updated>2019-05-02T05:00:07Z</updated><published>2019-05-02T05:00:00Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;&lt;a href="https://reg.summit.redhat.com/" imageanchor="1" style="clear: left; float: left; margin-bottom: 1em; margin-right: 1em;" target="_blank"&gt;&lt;img border="0" data-original-height="389" data-original-width="769" height="161" src="https://1.bp.blogspot.com/-yX0WaXZmaTI/XJj8CSvWUlI/AAAAAAAAth4/4Z1aZQ7VOp061sKNZ-_kMauutZPP46AMgCLcBGAs/s320/Screenshot%2B2019-03-25%2Bat%2B17.04.08.png" width="320" /&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://www.redhat.com/en/summit/2019" target="_blank"&gt;Red Hat Summit 2019&lt;/a&gt;&amp;nbsp;is rocking Boston, MA from May 7-9th in the&amp;nbsp;&lt;a href="https://www.signatureboston.com/BCEC" target="_blank"&gt;Boston Convention and Exhibition Center&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;Everything you need to know about the current state of open source enterprise ready software can be found at this event. From customers talking about their experiences leveraging open source in their solutions, to the creators of open source technologies you're using, and all the way down to hands-on lab experiences on these technologies.&lt;br /&gt;&lt;br /&gt;This hands-on appeal is what this series of articles is about. It's interesting to take a tour, so starting with this article let's examine a series of instructor-led labs based on a specific theme.&lt;br /&gt;&lt;br /&gt;This week it's a roadmap to &lt;i&gt;road to Red Hat Enterprise Linux 8&lt;/i&gt; lab content.&lt;br /&gt;&lt;a name='more'&gt;&lt;/a&gt;&lt;br /&gt;The following labs can be found in the&amp;nbsp;&lt;a href="https://summit.redhat.com/conference/sessions" target="_blank"&gt;session catalog online&lt;/a&gt;, by searching on title or filtering on &lt;i&gt;instructor-led labs&lt;/i&gt; and &lt;i&gt;road to Red Hat Enterprise Linux 8.&lt;/i&gt;&lt;br /&gt;&lt;br /&gt;&lt;h3&gt;Create custom images suitable for deploying systems using Red Hat Enterprise Linux image builder&lt;/h3&gt;&lt;i&gt;Customers are identifying market problems and expressing strong demand for tooling to easily create useful deployment images. These images are expected in variety of formats, in a variety of deployment models, with a variety of custom, third-party, and updated Red Hat Enterprise Linux Errata content. On Red Hat Enterprise Linux 8 Beta, image builder is available in Application Stream in the lorax-composer package. lorax-composer is an API server that lets you build disk images using blueprints to describe the package versions to be installed into the image. &lt;br /&gt;&lt;br /&gt;Throughout this lab, you'll gain hands-on experience about how to:&lt;br /&gt;&lt;/i&gt;&lt;br /&gt;&lt;ul&gt;&lt;li&gt;&lt;i&gt;Install image builder in Red Hat Enterprise Linux 8 Beta.&lt;/i&gt;&lt;/li&gt;&lt;i&gt;&lt;li&gt;Create blueprints and images with image builder web console.&lt;/li&gt;&lt;li&gt;Edit blueprints with image builder web console and cli.&lt;/li&gt;&lt;li&gt;Download with image builder web console and cli.&lt;/li&gt;&lt;li&gt;Deploy systems using custom images in KVM environment.&lt;/li&gt;&lt;/i&gt;&lt;/ul&gt;&lt;i&gt;At the end of this lab, you'll have Red Hat Enterprise Linux 8 Beta system with image builder installed along with custom images in various formats that are ready for deploying systems. You'll be able to install image builder, build custom images, and deploy systems in your production environment.&lt;br /&gt;&lt;br /&gt;Speakers: Yogesh Chavan, Karan Rai, Nenad Perić&lt;/i&gt;&lt;br /&gt;&lt;br /&gt;&lt;h3&gt;The definitive Red Hat Enterprise Linux 8 Beta hands-on lab&lt;/h3&gt;&lt;i&gt;Back for 2019 and completely refreshed with new content for Red Hat Enterprise Linux 8 Beta, this hands-on lab will lead you through a mix of self-paced and proctored exercises covering core and updated capabilities. Led by your favorite Red Hat field solution architects.&lt;br /&gt;&lt;br /&gt;All key areas will be covered:&lt;br /&gt;&lt;/i&gt;&lt;br /&gt;&lt;ul&gt;&lt;li&gt;&lt;i&gt;Ease of use: web console, yum 4, application-streams.&lt;/i&gt;&lt;/li&gt;&lt;i&gt;&lt;li&gt;Security: Simple system-level disk encryption, session recording with tlog, net-filter, abd nft-tools.&lt;/li&gt;&lt;li&gt;Performance: Tracing with ebpf, Cgroups v1 vs. v2, XFS enhancements.&lt;/li&gt;&lt;li&gt;Management: Gold image creation with image builder, skopio, buildah, podman, inplace upgrades with Boom.&lt;/li&gt;&lt;/i&gt;&lt;/ul&gt;&lt;i&gt;And plenty more. There will be ample experts on hand to help and answer your questions. Join us and begin your journey to becoming a Red Hat Enterprise Linux 8 Beta expert.&lt;br /&gt;&lt;br /&gt;Speakers: Christoph Doerbeck, Eddie Chen, Gordon Keegan, Karl Abbott, Matt St. Onge&lt;/i&gt;&lt;br /&gt;&lt;br /&gt;&lt;h3&gt;Using Red Hat Enterprise Linux 8 Beta AppStreams and containers for app dev&lt;/h3&gt;&lt;i&gt;Red Hat Enterprise Linux 8 Beta makes multiple versions of applications available to users to select and deploy with their applications. How does this work? Why would I need it? In this lab, you'll experiment with the new AppStreams yourself. We'll guide you through developing an application with AppStreams. Along the way, you'll learn:&lt;br /&gt;&lt;/i&gt;&lt;br /&gt;&lt;ul&gt;&lt;li&gt;&lt;i&gt;How and when to use an AppStreams.&lt;/i&gt;&lt;/li&gt;&lt;i&gt;&lt;li&gt;What AppStreams are available.&lt;/li&gt;&lt;li&gt;About AppStream profiles and defaults.&lt;/li&gt;&lt;li&gt;Using AppStreams with containers.&lt;/li&gt;&lt;/i&gt;&lt;/ul&gt;&lt;i&gt;Come build your first application using AppStreams.&lt;br /&gt;&lt;br /&gt;Speaker(s): Langdon White, Stephen Gallagher, Daniel Mach, Tomas Tomecek&lt;/i&gt;&lt;br /&gt;&lt;br /&gt;Stay tuned for more articles with insights into other themes that might interest you enough to register for one of these instructor-led labs at Red Hat Summit 2019.&lt;br /&gt;&lt;br /&gt;Looking forward to seeing you there!&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="feedflare"&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=vVzvF5W3kFY:bra8x_mfejw:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=vVzvF5W3kFY:bra8x_mfejw:63t7Ie-LG7Y"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=63t7Ie-LG7Y" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=vVzvF5W3kFY:bra8x_mfejw:4cEx4HpKnUU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=vVzvF5W3kFY:bra8x_mfejw:4cEx4HpKnUU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=vVzvF5W3kFY:bra8x_mfejw:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=vVzvF5W3kFY:bra8x_mfejw:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=vVzvF5W3kFY:bra8x_mfejw:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=vVzvF5W3kFY:bra8x_mfejw:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=vVzvF5W3kFY:bra8x_mfejw:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=vVzvF5W3kFY:bra8x_mfejw:gIN9vFwOqvQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=vVzvF5W3kFY:bra8x_mfejw:gIN9vFwOqvQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/schabell/jboss/~4/vVzvF5W3kFY" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/Hhnr4PKnR-4" height="1" width="1" alt=""/&gt;</content><summary>Red Hat Summit 2019 is rocking Boston, MA from May 7-9th in the Boston Convention and Exhibition Center. Everything you need to know about the current state of open source enterprise ready software can be found at this event. From customers talking about their experiences leveraging open source in their solutions, to the creators of open source technologies you're using, and all the way down to ha...</summary><dc:creator>Eric D. Schabell</dc:creator><dc:date>2019-05-02T05:00:00Z</dc:date><feedburner:origLink>http://feedproxy.google.com/~r/schabell/jboss/~3/vVzvF5W3kFY/red-hat-summit-2019-road-to-rhel8-labs-roadmap.html</feedburner:origLink></entry><entry><title>Hibernate Search 6.0.0.Alpha5 released!</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/k1IUatP-XXI/" /><category term="elasticsearch" scheme="searchisko:content:tags" /><category term="feed_group_name_hibernate" scheme="searchisko:content:tags" /><category term="feed_name_inrelationto" scheme="searchisko:content:tags" /><category term="hibernate search" scheme="searchisko:content:tags" /><category term="lucene" scheme="searchisko:content:tags" /><category term="releases" scheme="searchisko:content:tags" /><author><name>Yoann Rodière</name></author><id>searchisko:content:id:jbossorg_blog-hibernate_search_6_0_0_alpha5_released</id><updated>2019-05-02T13:52:53Z</updated><published>2019-05-02T00:00:00Z</published><content type="html">&lt;div id="preamble"&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;We just published Hibernate Search 6.0.0.Alpha5, the fifth release for the still-in-development 6.0 branch. This release mainly restores the "indexNullAs" feature, adds a brand new API to declare dependencies in bridges, and adds compatibility with Elasticsearch 6.7 and 7.0.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;&lt;!-- more --&gt;&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="getting-started-with-hibernate-search-6"&gt;&lt;a class="anchor" href="#getting-started-with-hibernate-search-6"&gt;&lt;/a&gt;Getting started with Hibernate Search 6&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;If you want to dive right into the new, shiny Hibernate Search 6, a good starting point is the &lt;a href="https://docs.jboss.org/hibernate/search/6.0/reference/en-US/html_single/#getting-started"&gt;getting started guide&lt;/a&gt; included in the reference documentation.&lt;/p&gt; &lt;/div&gt; &lt;div class="admonitionblock note"&gt; &lt;table&gt; &lt;tr&gt; &lt;td class="icon"&gt; &lt;i class="fa icon-note" title="Note"&gt;&lt;/i&gt; &lt;/td&gt; &lt;td class="content"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Hibernate Search 6 is still in development and its APIs differ significantly from Search 5.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;For more information about the current status of this branch, see &lt;a href="http://hibernate.org/search/releases/6.0/#whats-new"&gt;the page dedicated to Search 6 on hibernate.org&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;For more information about migration and what we intend to do to help you, see &lt;a href="http://hibernate.org/search/documentation/migrate/6.0/"&gt;the migration guide&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="what-s-new"&gt;&lt;a class="anchor" href="#what-s-new"&gt;&lt;/a&gt;What’s new&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="sect2"&gt; &lt;h3 id="indexnullas-is-back"&gt;&lt;a class="anchor" href="#indexnullas-is-back"&gt;&lt;/a&gt;"indexNullAs" is back&lt;/h3&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The &lt;a href="https://hibernate.atlassian.net/browse/HSEARCH-3099"&gt;"indexNullAs" feature is back&lt;/a&gt;, allowing to replace null properties with a value of your choice when indexing:&lt;/p&gt; &lt;/div&gt; &lt;div class="listingblock"&gt; &lt;div class="content"&gt; &lt;pre class="CodeRay highlight"&gt;&lt;code data-lang="JAVA"&gt;&lt;span style="color:#007"&gt;@GenericField&lt;/span&gt;(indexNullAs = &lt;span style="background-color:hsla(0,100%,50%,0.05)"&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;span style="color:#D20"&gt;1900-01-01&lt;/span&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span style="color:#088;font-weight:bold"&gt;public&lt;/span&gt; LocalDate getBirthDate() { &lt;span style="color:#080;font-weight:bold"&gt;return&lt;/span&gt; birthDate; }&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The "indexNullAs" attribute is passed as a String in the annotation, but the String is expected to be formatted according to the property type (integer, date, etc.). See &lt;a href="https://docs.jboss.org/hibernate/search/6.0/reference/en-US/html_single/#mapper-orm-directfieldmapping-indexnullas"&gt;the documentation&lt;/a&gt; for more information.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Note that:&lt;/p&gt; &lt;/div&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Support for "default" null tokens configured in the configuration properties was removed, because it no longer makes sense when each field requires a null token of a different type (&lt;a href="https://hibernate.atlassian.net/browse/HSEARCH-3553"&gt;HSEARCH-3553&lt;/a&gt;).&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Support for "indexNullAs" in &lt;code&gt;@IndexedEmbedded&lt;/code&gt; was removed because it was poorly defined in some corner cases (like when &lt;code&gt;@IndexedEmbedded.prefix&lt;/code&gt; does not contain any dot) and cannot be implemented for Elasticsearch (&lt;a href="https://hibernate.atlassian.net/browse/HSEARCH-2465"&gt;HSEARCH-2465&lt;/a&gt;). An "exists" predicate for object fields will be added in a future release to compensate (&lt;a href="https://hibernate.atlassian.net/browse/HSEARCH-2389"&gt;HSEARCH-2389&lt;/a&gt;).&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="simpler-api-to-declare-dependencies-in-bridges"&gt;&lt;a class="anchor" href="#simpler-api-to-declare-dependencies-in-bridges"&gt;&lt;/a&gt;Simpler API to declare dependencies in bridges&lt;/h3&gt; &lt;div class="paragraph"&gt; &lt;p&gt;In an effort to make bridges easier to use, we added a more direct way to declare the properties a &lt;code&gt;TypeBridge&lt;/code&gt; or &lt;code&gt;PropertyBridge&lt;/code&gt; will use.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;This feature, and bridges in general, will be documented in more details once we feel they are ready, but if you are interested you can already find examples &lt;a href="https://github.com/hibernate/hibernate-search/blob/6.0.0.Alpha5/integrationtest/showcase/library/src/main/java/org/hibernate/search/integrationtest/showcase/library/bridge/AccountBorrowalSummaryBridge.java#L42"&gt;in the showcase&lt;/a&gt;&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="version-upgrades"&gt;&lt;a class="anchor" href="#version-upgrades"&gt;&lt;/a&gt;Version upgrades&lt;/h3&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://hibernate.atlassian.net/browse/HSEARCH-3518"&gt;HSEARCH-3518&lt;/a&gt; and &lt;a href="https://hibernate.atlassian.net/browse/HSEARCH-3568"&gt;HSEARCH-3568&lt;/a&gt;: Add compatibility with Elasticsearch 6.7&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://hibernate.atlassian.net/browse/HSEARCH-3541"&gt;HSEARCH-3541&lt;/a&gt;: Add compatibility with Elasticsearch 7.0&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="other-improvements-and-bug-fixes"&gt;&lt;a class="anchor" href="#other-improvements-and-bug-fixes"&gt;&lt;/a&gt;Other improvements and bug fixes&lt;/h3&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://hibernate.atlassian.net/browse/HSEARCH-3534"&gt;HSEARCH-3534&lt;/a&gt;: Default value for "minimumShouldMatch" is different between Elasticsearch and Lucene. Elasticsearch, before version 7, used to use non-trivial rules to determine whether a "should" clause is required to match, notably taking into account whether this clause is nested in a "filter" clause. This was different from the behavior of the Lucene backend, and (even worse) different from the behavior in Elasticsearch 7+. We made sure to override the defaults so that every predicate created with the Hibernate Search DSL will behave as Lucene. Thanks to Goran Jaric for reporting this.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://hibernate.atlassian.net/browse/HSEARCH-3563"&gt;HSEARCH-3563&lt;/a&gt;: When Elasticsearch dialects are configured explicitly, you no longer need to point to a dialect explicitly but can simply provide the Elasticsearch version you expect, and Hibernate Search will pick the right dialect for you.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://hibernate.atlassian.net/browse/HSEARCH-1656"&gt;HSEARCH-1656&lt;/a&gt;: Recognize annotations from implemented interfaces.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://hibernate.atlassian.net/browse/HSEARCH-2941"&gt;HSEARCH-2941&lt;/a&gt;: &lt;code&gt;MassIndexerProgressMonitor&lt;/code&gt; methods now consistently use the &lt;code&gt;long&lt;/code&gt; type.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://hibernate.atlassian.net/browse/HSEARCH-3566"&gt;HSEARCH-3566&lt;/a&gt;: Reindexing is now triggered when an association mentioned in an &lt;code&gt;@IndexingDependency.derivedFrom&lt;/code&gt; is updated.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;And more. For a full list of changes since the previous releases, please see the &lt;a href="https://hibernate.atlassian.net/secure/ReleaseNote.jspa?projectId=10061&amp;amp;version=31769"&gt;release notes&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="how-to-get-this-release"&gt;&lt;a class="anchor" href="#how-to-get-this-release"&gt;&lt;/a&gt;How to get this release&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;All details are available and up to date on the &lt;a href="http://hibernate.org/search/releases/6.0/#get-it"&gt;dedicated page on hibernate.org&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="feedback-issues-ideas"&gt;&lt;a class="anchor" href="#feedback-issues-ideas"&gt;&lt;/a&gt;Feedback, issues, ideas?&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;To get in touch, use the following channels:&lt;/p&gt; &lt;/div&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;a href="http://stackoverflow.com/questions/tagged/hibernate-search"&gt;hibernate-search tag on Stackoverflow&lt;/a&gt; (usage questions)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://discourse.hibernate.org/c/hibernate-search"&gt;User forum&lt;/a&gt; (usage questions, general feedback)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://hibernate.atlassian.net/browse/HSEARCH"&gt;Issue tracker&lt;/a&gt; (bug reports, feature requests)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="http://lists.jboss.org/pipermail/hibernate-dev/"&gt;Mailing list&lt;/a&gt; (development-related discussions)&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/k1IUatP-XXI" height="1" width="1" alt=""/&gt;</content><summary>We just published Hibernate Search 6.0.0.Alpha5, the fifth release for the still-in-development 6.0 branch. This release mainly restores the "indexNullAs" feature, adds a brand new API to declare dependencies in bridges, and adds compatibility with Elasticsearch 6.7 and 7.0. Getting started with Hibernate Search 6 If you want to dive right into the new, shiny Hibernate Search 6, a good starting po...</summary><dc:creator>Yoann Rodière</dc:creator><dc:date>2019-05-02T00:00:00Z</dc:date><feedburner:origLink>http://in.relation.to/2019/05/02/hibernate-search-6-0-0-Alpha5/</feedburner:origLink></entry><entry><title>A guide to the open source distributed tracing landscape</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/MmiM3QvGCWk/" /><category term="distributed tracing" scheme="searchisko:content:tags" /><category term="events" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="microservices" scheme="searchisko:content:tags" /><category term="red hat summit" scheme="searchisko:content:tags" /><author><name>Juraci Costa</name></author><id>searchisko:content:id:jbossorg_blog-a_guide_to_the_open_source_distributed_tracing_landscape</id><updated>2019-05-01T07:03:41Z</updated><published>2019-05-01T07:03:41Z</published><content type="html">&lt;p&gt;Getting started with distributed tracing can be a daunting task. There are many new terms, frameworks, and tools with apparently overlapping capabilities, and it&amp;#8217;s easy to get lost or sidetracked. This guide will help you navigate the open source distributed tracing landscape by describing and classifying the most popular tools.&lt;span id="more-592377"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;Although tracing and profiling are closely related disciplines, distributed tracing is typically understood as the technique that is used to tie the information about different units of work together—usually executed in different processes or hosts—in order to understand a whole chain of events. In a modern application, this means that distributed tracing can be used to tell the story of an HTTP request as it traverses across a &lt;a href="https://opensource.com/article/18/9/distributed-tracing-microservices-world"&gt;myriad of microservices&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Most of the tools listed here can be classified as an instrumentation library, a tracer, an analysis tool (backend + UI), or any combination thereof. The article &lt;a href="https://medium.com/opentracing/the-difference-between-tracing-tracing-and-tracing-84b49b2d54ea"&gt;&amp;#8220;The difference between tracing, tracing, and tracing&amp;#8221;&lt;/a&gt; is a great resource in describing these three faces of distributed tracing.&lt;/p&gt; &lt;p&gt;For the purposes of this guide, we&amp;#8217;ll define &lt;em&gt;instrumentation&lt;/em&gt; as the library that is used to tell what to record, &lt;em&gt;tracer&lt;/em&gt; as the library that knows how to record and submit this data, and &lt;em&gt;analysis tool&lt;/em&gt; as the back end that receives the trace information. In the real world, these categories are fluid, with the distinction between instrumentation and tracer not always being clear. Similarly, the term analysis tool might be too broad, as some tools are focused on exploring traces and others being complete observability platforms.&lt;/p&gt; &lt;p&gt;This guide lists only open source projects, but there are several other vendors and solutions worth checking out, such as AWS X-Ray, Datadog, Google Stackdriver, Instana, LightStep, among others.&lt;/p&gt; &lt;h3&gt;Apache SkyWalking&lt;/h3&gt; &lt;table style="width: 100%;"&gt; &lt;tbody&gt; &lt;tr&gt; &lt;th style="text-align: center;"&gt;Instrumentation&lt;/th&gt; &lt;th style="text-align: center;"&gt;Tracer&lt;/th&gt; &lt;th style="text-align: center;"&gt;Analysis tool&lt;/th&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td style="text-align: center;"&gt;✗&lt;/td&gt; &lt;td style="text-align: center;"&gt;✗&lt;/td&gt; &lt;td style="text-align: center;"&gt;✓&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;p&gt;&lt;a href="https://skywalking.apache.org/"&gt;Apache SkyWalking&lt;/a&gt; was initially developed in 2015 as a training project to understand distributed systems. It has since become prevalent in China and aims to be a complete Application Performance Monitoring platform (APM), focusing heavily on automatic instrumentation via agents and integration with existing tracers, such as Zipkin&amp;#8217;s and Jaeger&amp;#8217;s, or with infrastructure components like service meshes. SkyWalking was &lt;a href="https://blogs.apache.org/foundation/entry/the-apache-software-foundation-announces50"&gt;recently promoted&lt;/a&gt; to a top-level project at the Apache Foundation.&lt;/p&gt; &lt;h3&gt;Apache Zipkin&lt;/h3&gt; &lt;table style="width: 100%;"&gt; &lt;tbody&gt; &lt;tr&gt; &lt;th style="text-align: center;"&gt;Instrumentation&lt;/th&gt; &lt;th style="text-align: center;"&gt;Tracer&lt;/th&gt; &lt;th style="text-align: center;"&gt;Analysis tool&lt;/th&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td style="text-align: center;"&gt;✓&lt;/td&gt; &lt;td style="text-align: center;"&gt;✓&lt;/td&gt; &lt;td style="text-align: center;"&gt;✓&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;p&gt;&lt;a href="https://zipkin.io"&gt;Apache Zipkin&lt;/a&gt; (incubating) was initially developed at Twitter and &lt;a href="https://blog.twitter.com/engineering/en_us/a/2012/distributed-systems-tracing-with-zipkin.html"&gt;open sourced in 2012&lt;/a&gt;. It&amp;#8217;s one of the most mature open source tracing systems and has inspired pretty much all of the modern distributed tracing tools. It&amp;#8217;s a complete tracing solution, including the instrumentation libraries, the tracer, and the analysis tool. The propagation format, called &lt;a href="https://github.com/apache/incubator-zipkin-b3-propagation"&gt;B3&lt;/a&gt;, is the current lingua franca in distributed tracing, as well as its &lt;a href="https://github.com/apache/incubator-zipkin-api/blob/master/zipkin2-api.yaml"&gt;data format&lt;/a&gt;, which is natively supported by other tools, such as &lt;a href="https://www.envoyproxy.io/"&gt;Envoy Proxy&lt;/a&gt; on the producing side and other tracing solutions on the consuming side. One of Zipkin&amp;#8217;s strengths is the number of high-quality framework instrumentation libraries.&lt;/p&gt; &lt;h3&gt;Haystack&lt;/h3&gt; &lt;table style="width: 100%;"&gt; &lt;tbody&gt; &lt;tr&gt; &lt;th style="text-align: center;"&gt;Instrumentation&lt;/th&gt; &lt;th style="text-align: center;"&gt;Tracer&lt;/th&gt; &lt;th style="text-align: center;"&gt;Analysis tool&lt;/th&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td style="text-align: center;"&gt;✗&lt;/td&gt; &lt;td style="text-align: center;"&gt;✓&lt;/td&gt; &lt;td style="text-align: center;"&gt;✓&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;p&gt;&lt;a href="https://expediadotcom.github.io/haystack/"&gt;Haystack&lt;/a&gt; is a tracing system with APM-like capabilities, such as anomaly detection and trend visualization. Originally developed at Expedia, the architecture has a clear focus on high-availability. Haystack leverages OpenTracing as its main instrumentation library and add-on components like &lt;a href="https://github.com/HotelsDotCom/pitchfork"&gt;Pitchfork&lt;/a&gt; can be used to ingest data in other formats.&lt;/p&gt; &lt;h3&gt;Jaeger&lt;/h3&gt; &lt;table style="width: 100%;"&gt; &lt;tbody&gt; &lt;tr&gt; &lt;th style="text-align: center;"&gt;Instrumentation&lt;/th&gt; &lt;th style="text-align: center;"&gt;Tracer&lt;/th&gt; &lt;th style="text-align: center;"&gt;Analysis tool&lt;/th&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td style="text-align: center;"&gt;✗&lt;/td&gt; &lt;td style="text-align: center;"&gt;✓&lt;/td&gt; &lt;td style="text-align: center;"&gt;✓&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;p&gt;&lt;a href="https://www.jaegertracing.io/"&gt;Jaeger&lt;/a&gt; was initially developed at Uber, &lt;a href="https://eng.uber.com/distributed-tracing/"&gt;open sourced in 2017&lt;/a&gt;, and moved to the &lt;a href="https://www.cncf.io/"&gt;Cloud Native Computing Foundation (CNCF)&lt;/a&gt; soon after. The inspiration from Dapper and Zipkin can be seen in Jaeger&amp;#8217;s original architecture, data model, and nomenclature, but it has evolved beyond that. For the instrumentation part, Jaeger leverages the OpenTracing API, which has been a first-class citizen since the beginning. The analysis tool is very lightweight, making it ideal for development purposes and for highly elastic environments (e.g., multi-tenant Kubernetes clusters), and it is the default tracer for tools like &lt;a href="https://istio.io/"&gt;Istio&lt;/a&gt;.&lt;/p&gt; &lt;h3&gt;OpenCensus&lt;/h3&gt; &lt;table style="width: 100%;"&gt; &lt;tbody&gt; &lt;tr&gt; &lt;th style="text-align: center;"&gt;Instrumentation&lt;/th&gt; &lt;th style="text-align: center;"&gt;Tracer&lt;/th&gt; &lt;th style="text-align: center;"&gt;Analysis tool&lt;/th&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td style="text-align: center;"&gt;✓&lt;/td&gt; &lt;td style="text-align: center;"&gt;✓&lt;/td&gt; &lt;td style="text-align: center;"&gt;✗&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;p&gt;Initially developed at Google based on its internal tracing platform, &lt;a href="https://opencensus.io"&gt;OpenCensus&lt;/a&gt; is both a tracer and an instrumentation library. Its tracer can be connected to &amp;#8220;exporters,&amp;#8221; sending data to open source analysis tools such as Jaeger, Zipkin, and Haystack, as well as to vendors in the area, such as Instana and Google Stackdriver. In addition to the tracer, an OpenCensus Agent is available that can be used as an out-of-process exporter, allowing the instrumented applications to be completely agnostic from the analysis tool where the data ends up. Tracing is one side of OpenCensus, with metrics completing the picture. It&amp;#8217;s not as rich in terms of framework instrumentation libraries yet, but that will probably change once the merge with the OpenTracing project is completed.&lt;/p&gt; &lt;h3&gt;OpenTracing&lt;/h3&gt; &lt;table style="width: 100%;"&gt; &lt;tbody&gt; &lt;tr&gt; &lt;th style="text-align: center;"&gt;Instrumentation&lt;/th&gt; &lt;th style="text-align: center;"&gt;Tracer&lt;/th&gt; &lt;th style="text-align: center;"&gt;Analysis tool&lt;/th&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td style="text-align: center;"&gt;✓&lt;/td&gt; &lt;td style="text-align: center;"&gt;✗&lt;/td&gt; &lt;td style="text-align: center;"&gt;✗&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;p&gt;If there&amp;#8217;s something close to a standard on the instrumentation side of distributed tracing, it&amp;#8217;s &lt;a href="https://opentracing.io/"&gt;OpenTracing&lt;/a&gt;. This project, hosted at the &lt;a href="https://www.cncf.io/"&gt;CNCF&lt;/a&gt; was started by people implementing distributed tracing systems in a variety of scenarios: as vendors, as users, or as developers of in-house implementations. On one side of the project, there are many framework instrumentation libraries such as for JAX-RS, Spring Boot, or JDBC. On the other side, several tracers fully support the OpenTracing API, including Jaeger and Haystack, as well as for well-known vendors in the area, such as Instana, LightStep, Datadog, and New Relic. Compatible implementations also exist for Zipkin.&lt;/p&gt; &lt;h3&gt;OpenTracing + OpenCensus&lt;/h3&gt; &lt;table style="width: 100%;"&gt; &lt;tbody&gt; &lt;tr&gt; &lt;th style="text-align: center;"&gt;Instrumentation&lt;/th&gt; &lt;th style="text-align: center;"&gt;Tracer&lt;/th&gt; &lt;th style="text-align: center;"&gt;Analysis tool&lt;/th&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td style="text-align: center;"&gt;?/✓&lt;/td&gt; &lt;td style="text-align: center;"&gt;?/✗&lt;/td&gt; &lt;td style="text-align: center;"&gt;✗&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;p&gt;It was recently announced that OpenTracing will be &lt;a href="https://medium.com/opentracing/merging-opentracing-and-opencensus-f0fe9c7ca6f0"&gt;merging efforts&lt;/a&gt; with OpenCensus. While it&amp;#8217;s still not clear what the future tool will look like, or even how it will be named, this is certainly something to keep on the radar. A tentative &lt;a href="https://medium.com/opentracing/a-roadmap-to-convergence-b074e5815289"&gt;roadmap&lt;/a&gt; has been published along with some concrete proposals in terms of code, showing the direction this new tool will follow.&lt;/p&gt; &lt;h3&gt;Pinpoint&lt;/h3&gt; &lt;table style="width: 100%;"&gt; &lt;tbody&gt; &lt;tr&gt; &lt;th style="text-align: center;"&gt;Instrumentation&lt;/th&gt; &lt;th style="text-align: center;"&gt;Tracer&lt;/th&gt; &lt;th style="text-align: center;"&gt;Analysis tool&lt;/th&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td style="text-align: center;"&gt;✓&lt;/td&gt; &lt;td style="text-align: center;"&gt;✓&lt;/td&gt; &lt;td style="text-align: center;"&gt;✓&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;p&gt;&lt;a href="https://naver.github.io/pinpoint/"&gt;Pinpoint&lt;/a&gt; was initially developed at &lt;a href="https://www.navercorp.com/en"&gt;Naver&lt;/a&gt; in 2012 and open sourced in 2015. It contains APM capabilities, featuring network topology, JVM telemetry graphs and trace views. Instrumentation is done exclusively via agents and can be extended via plugins. The upside of this approach is that instrumentation does not require code changes; but on the downside, it lacks support for explicit instrumentation. Pinpoint works with PHP and JVM-based applications, where it has broad support for frameworks and libraries.&lt;/p&gt; &lt;h3&gt;Veneur&lt;/h3&gt; &lt;table style="width: 100%;"&gt; &lt;tbody&gt; &lt;tr&gt; &lt;th style="text-align: center;"&gt;Instrumentation&lt;/th&gt; &lt;th style="text-align: center;"&gt;Tracer&lt;/th&gt; &lt;th style="text-align: center;"&gt;Analysis tool&lt;/th&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td style="text-align: center;"&gt;✓&lt;/td&gt; &lt;td style="text-align: center;"&gt;✓&lt;/td&gt; &lt;td style="text-align: center;"&gt;✗&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;p&gt;The &lt;a href="https://veneur.org/"&gt;Veneur&lt;/a&gt; project was started by Stripe, and it is described as a pipeline for observability data. It deviates from almost all other tools in this guide in that it&amp;#8217;s very opinionated about what observability should be about: spans. It comes with a set of local agents (called &amp;#8220;sinks&amp;#8221;) that are able to receive spans, extracting or aggregating data from them, sending the outcome to external systems like Kafka. To better achieve that, Veneur comes with its own data format, &lt;a href="https://github.com/stripe/veneur/tree/master/ssf"&gt;SSF&lt;/a&gt;. Metrics can either be embedded into the spans, or synthesized/aggregated based on &amp;#8220;regular&amp;#8221; span data.&lt;/p&gt; &lt;h3&gt;Dapper&lt;/h3&gt; &lt;p&gt;The Dapper distributed tracing solution originated at Google and is described in &lt;a href="https://ai.google/research/pubs/pub36356"&gt;a paper from 2010&lt;/a&gt;. It is a common ancestor to most of the tools listed here, including Zipkin, Jaeger, Haystack, OpenTracing, and OpenCensus. Although Dapper doesn&amp;#8217;t exist as a solution you can download and install, the paper is still a good reference of the primitives used in modern distributed tracing solutions, as well as the reasoning behind some of the design decisions.&lt;/p&gt; &lt;h3&gt;W3C Trace Context&lt;/h3&gt; &lt;p&gt;One of the big problems with the current distributed tracing ecosystem is interoperability between applications instrumented using different tracers. To solve this problem, the &lt;a href="https://www.w3.org/2018/distributed-tracing/"&gt;Distributed Tracing Working Group&lt;/a&gt; was formed at the World Wide Web Consortium (W3C) to work on the &lt;a href="https://www.w3.org/TR/trace-context/"&gt;Trace Context&lt;/a&gt; recommendation for the propagation format.&lt;/p&gt; &lt;h3&gt;Overview of all projects&lt;/h3&gt; &lt;table style="width: 100%;"&gt; &lt;tbody&gt; &lt;tr&gt; &lt;th style="text-align: center;"&gt;Project&lt;/th&gt; &lt;th style="text-align: center;"&gt;Instrumentation&lt;/th&gt; &lt;th style="text-align: center;"&gt;Tracer&lt;/th&gt; &lt;th style="text-align: center;"&gt;Analysis tool&lt;/th&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td style="text-align: center;"&gt;Apache SkyWalking&lt;/td&gt; &lt;td style="text-align: center;"&gt;✗&lt;/td&gt; &lt;td style="text-align: center;"&gt;✗&lt;/td&gt; &lt;td style="text-align: center;"&gt;✓&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td style="text-align: center;"&gt;Apache Zipkin&lt;/td&gt; &lt;td style="text-align: center;"&gt;✓&lt;/td&gt; &lt;td style="text-align: center;"&gt;✓&lt;/td&gt; &lt;td style="text-align: center;"&gt;✓&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td style="text-align: center;"&gt;Haystack&lt;/td&gt; &lt;td style="text-align: center;"&gt;✗&lt;/td&gt; &lt;td style="text-align: center;"&gt;✓&lt;/td&gt; &lt;td style="text-align: center;"&gt;✓&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td style="text-align: center;"&gt;Jaeger&lt;/td&gt; &lt;td style="text-align: center;"&gt;✗&lt;/td&gt; &lt;td style="text-align: center;"&gt;✓&lt;/td&gt; &lt;td style="text-align: center;"&gt;✓&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td style="text-align: center;"&gt;OpenCensus&lt;/td&gt; &lt;td style="text-align: center;"&gt;✓&lt;/td&gt; &lt;td style="text-align: center;"&gt;✓&lt;/td&gt; &lt;td style="text-align: center;"&gt;✗&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td style="text-align: center;"&gt;OpenTracing&lt;/td&gt; &lt;td style="text-align: center;"&gt;✓&lt;/td&gt; &lt;td style="text-align: center;"&gt;✓&lt;/td&gt; &lt;td style="text-align: center;"&gt;✗&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td style="text-align: center;"&gt;OpenTracing + OpenCensus&lt;/td&gt; &lt;td style="text-align: center;"&gt;?/✓&lt;/td&gt; &lt;td style="text-align: center;"&gt;?/✗&lt;/td&gt; &lt;td style="text-align: center;"&gt;✗&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td style="text-align: center;"&gt;Pinpoint&lt;/td&gt; &lt;td style="text-align: center;"&gt;✓&lt;/td&gt; &lt;td style="text-align: center;"&gt;✓&lt;/td&gt; &lt;td style="text-align: center;"&gt;✓&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td style="text-align: center;"&gt;Veneur&lt;/td&gt; &lt;td style="text-align: center;"&gt;✓&lt;/td&gt; &lt;td style="text-align: center;"&gt;✓&lt;/td&gt; &lt;td style="text-align: center;"&gt;✗&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;p&gt;&lt;em&gt;Juraci Paixão Kröhling will present &lt;a href="https://summit.redhat.com/conference/sessions"&gt;&amp;#8220;What are my microservices doing?&amp;#8221;&lt;/a&gt; at Red Hat Summit, Thursday, May 9, 11:00 a.m.-11:45 a.m. This talk will look at some of the challenges presented by microservices architecture, including the observability problem, where it is hard to know which services exist, how they interrelate, and the importance of each one.&lt;/em&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;If you haven’t registered yet, visit &lt;a href="https://www.redhat.com/en/summit/2019/?intcmp=701f20000012i8UAAQ"&gt;Red Hat Summit&lt;/a&gt; to sign up. See you in Boston!&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F01%2Fa-guide-to-the-open-source-distributed-tracing-landscape%2F&amp;#38;linkname=A%20guide%20to%20the%20open%20source%20distributed%20tracing%20landscape" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F01%2Fa-guide-to-the-open-source-distributed-tracing-landscape%2F&amp;#38;linkname=A%20guide%20to%20the%20open%20source%20distributed%20tracing%20landscape" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F01%2Fa-guide-to-the-open-source-distributed-tracing-landscape%2F&amp;#38;linkname=A%20guide%20to%20the%20open%20source%20distributed%20tracing%20landscape" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F01%2Fa-guide-to-the-open-source-distributed-tracing-landscape%2F&amp;#38;linkname=A%20guide%20to%20the%20open%20source%20distributed%20tracing%20landscape" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F01%2Fa-guide-to-the-open-source-distributed-tracing-landscape%2F&amp;#38;linkname=A%20guide%20to%20the%20open%20source%20distributed%20tracing%20landscape" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F01%2Fa-guide-to-the-open-source-distributed-tracing-landscape%2F&amp;#38;linkname=A%20guide%20to%20the%20open%20source%20distributed%20tracing%20landscape" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F01%2Fa-guide-to-the-open-source-distributed-tracing-landscape%2F&amp;#38;linkname=A%20guide%20to%20the%20open%20source%20distributed%20tracing%20landscape" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F01%2Fa-guide-to-the-open-source-distributed-tracing-landscape%2F&amp;#38;linkname=A%20guide%20to%20the%20open%20source%20distributed%20tracing%20landscape" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F01%2Fa-guide-to-the-open-source-distributed-tracing-landscape%2F&amp;#038;title=A%20guide%20to%20the%20open%20source%20distributed%20tracing%20landscape" data-a2a-url="https://developers.redhat.com/blog/2019/05/01/a-guide-to-the-open-source-distributed-tracing-landscape/" data-a2a-title="A guide to the open source distributed tracing landscape"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/05/01/a-guide-to-the-open-source-distributed-tracing-landscape/"&gt;A guide to the open source distributed tracing landscape&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/MmiM3QvGCWk" height="1" width="1" alt=""/&gt;</content><summary>Getting started with distributed tracing can be a daunting task. There are many new terms, frameworks, and tools with apparently overlapping capabilities, and it’s easy to get lost or sidetracked. This guide will help you navigate the open source distributed tracing landscape by describing and classifying the most popular tools. Although tracing and profiling are closely related disciplines, distr...</summary><dc:creator>Juraci Costa</dc:creator><dc:date>2019-05-01T07:03:41Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/05/01/a-guide-to-the-open-source-distributed-tracing-landscape/</feedburner:origLink></entry><entry><title>Automated migration from JBoss AMQ 6 to Red Hat AMQ 7 on Red Hat OpenShift</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/omyEn8O2tHo/" /><category term="ansible" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="jboss a-mq" scheme="searchisko:content:tags" /><category term="openshift" scheme="searchisko:content:tags" /><category term="Red Hat AMQ" scheme="searchisko:content:tags" /><category term="Red Hat OpenShift" scheme="searchisko:content:tags" /><category term="Red Hat OpenShift Container Platform" scheme="searchisko:content:tags" /><author><name>Roman Martin Gil</name></author><id>searchisko:content:id:jbossorg_blog-automated_migration_from_jboss_amq_6_to_red_hat_amq_7_on_red_hat_openshift</id><updated>2019-05-01T07:00:58Z</updated><published>2019-05-01T07:00:58Z</published><content type="html">&lt;p&gt;Since Red Hat OpenShift Container Platform was first released, Red Hat Middleware products were provided to deploy on it and help developers to build more complex solutions. Messaging Brokers are a very important piece in most new application architectures, such as &lt;a href="https://developers.redhat.com/topics/microservices/"&gt;microservices&lt;/a&gt;, &lt;a href="https://microservices.io/patterns/data/event-sourcing.html"&gt;event sourcing&lt;/a&gt;, and &lt;a href="https://microservices.io/patterns/data/cqrs.html"&gt;CQRS&lt;/a&gt;. &lt;a href="https://access.redhat.com/documentation/en-us/red_hat_jboss_a-mq/6.1/html/product_introduction/fusembintrowhatismb"&gt;Red Hat JBoss AMQ&lt;/a&gt; was provided from the beginning to deploy Messaging Brokers on &lt;a href="https://developers.redhat.com/products/openshift/overview/"&gt;Red Hat OpenShift&lt;/a&gt; easily.&lt;/p&gt; &lt;p&gt;&lt;a href="https://www.redhat.com/en/technologies/jboss-middleware/amq"&gt;Red Hat AMQ&lt;/a&gt; 7 is the latest version of a high-performance, scalable, and multi-protocol broker based on the &lt;a href="http://activemq.apache.org/components/artemis/"&gt;Apache ActiveMQ Artemis&lt;/a&gt; open source project. It is also available as a containerized image for use with Red Hat OpenShift, so it allows developers to quickly deploy messaging brokers in a cloud environment.&lt;/p&gt; &lt;p&gt;There is a &lt;a href="https://access.redhat.com/documentation/en-us/red_hat_amq/7.2/html-single/migrating_to_red_hat_amq_7/index"&gt;Red Hat AMQ 7 migration guide&lt;/a&gt; with the most important topics; however, how to do this on Red Hat OpenShift is not completely covered. From my field experience with customers, we defined an automated process to do it on OpenShift including:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Zero downtime for consumers and producers&lt;/li&gt; &lt;li&gt;Move any persisted message from Red Hat JBoss AMQ 6 to Red Hat AMQ 7&lt;/li&gt; &lt;li&gt;Automated using Ansible Playbooks&lt;/li&gt; &lt;/ul&gt; &lt;h2&gt;Migration Process&lt;/h2&gt; &lt;p&gt;Red Hat JBoss AMQ 6 (AMQ 6) provides a drainer pod, only available for persistent templates, which is responsible for managing the migration of messages. When AMQ 6 is deployed using a multi-node configuration, it is possible for messages to be left in the KahaDB store directory when the AMQ 6 cluster is scaled down. To prevent messages from remaining, the drainer pod will recover them and move them to other AMQ 6 pod instance. Behind the scenes, a &lt;a href="http://activemq.apache.org/networks-of-brokers.html"&gt;network of brokers&lt;/a&gt; is established between the drainer pod and other AMQ 6 pods.&lt;/p&gt; &lt;p&gt;Red Hat AMQ 7 provides the same protocols that previous version. The drainer pod uses OpenWire protocol to move messages, so we will use it to move messages to the new Red Hat AMQ 7 broker.&lt;/p&gt; &lt;p&gt;We need to change the service selectors of each AMQ 6 protocol service (openwire, amqp, stomp, mqtt) to identify the new Red Hat AMQ 7 pod instances. When an AMQ 6 broker is scaled down (replicas = 0), the drainer pod will move the persisted messages.&lt;/p&gt; &lt;p&gt;This feature defines a very straight forward migration process as:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Scale up Red Hat AMQ 7 broker and wait to be ready.&lt;/li&gt; &lt;li&gt;Patch AMQ 6 services to balance connections to Red Hat AMQ 7 broker pods.&lt;/li&gt; &lt;li&gt;Scale down AMQ 6 drainer (&lt;em&gt;it will be started later&lt;/em&gt;).&lt;/li&gt; &lt;li&gt;Scale down AMQ 6 broker to avoid new connections. New connections are established to new Red Hat AMQ 7 broker.&lt;/li&gt; &lt;li&gt;Scale up AMQ 6 drainer to drain messages to new Red Hat AMQ 7 broker.&lt;/li&gt; &lt;li&gt;Check AMQ 6 drainer concluded two migration cycles. If after two cycles there are not messages to migrate, we can confirm that drainer finished successfully.&lt;/li&gt; &lt;li&gt;Scale down AMQ 6 drainer.&lt;/li&gt; &lt;/ol&gt; &lt;h2&gt;Ansible Playbook&lt;/h2&gt; &lt;p&gt;The migration process described above includes steps and checks, which are very easy to execute manually. However, it could be more difficult if you need to do this for each AMQ 6 broker deployed in Red Hat OpenShift. &lt;a href="https://docs.ansible.com/ansible/latest/user_guide/playbooks.html"&gt;Ansible playbooks&lt;/a&gt; and &lt;a href="https://docs.ansible.com/ansible/latest/user_guide/playbooks_reuse_roles.html"&gt;Ansible roles&lt;/a&gt; can help you automate it easily.&lt;/p&gt; &lt;p&gt;I developed a simple Ansible playbook to migrate brokers using &lt;a href="https://docs.ansible.com/ansible/2.4/command_module.html"&gt;command module&lt;/a&gt; and &lt;a href="https://docs.openshift.com/container-platform/3.11/cli_reference/get_started_cli.html"&gt;OpenShift CLI&lt;/a&gt;. Of course, there are other alternatives to implement other approaches, such as, &lt;a href="https://docs.ansible.com/ansible/2.4/oc_module.html"&gt;oc module&lt;/a&gt;, &lt;a href="https://docs.ansible.com/ansible/2.5/modules/openshift_raw_module.html"&gt;openshift_raw module&lt;/a&gt;, &lt;a href="https://docs.ansible.com/ansible/2.5/plugins/lookup/openshift.html"&gt;openshift module&lt;/a&gt;, etc.&lt;/p&gt; &lt;p&gt;This Ansible playbook sample is available in this &lt;a href="https://github.com/rmarting/migration-amq6-amq7-openshift"&gt;GitHub repository&lt;/a&gt;.&lt;/p&gt; &lt;h2&gt;Conclusions&lt;/h2&gt; &lt;p&gt;This article shows how easy it is to migrate Red Hat JBoss AMQ 6 brokers to Red Hat AMQ 7 brokers on Red Hat OpenShift. Do not miss the opportunity to get the best improvements of Red Hat AMQ 7 in your Red Hat OpenShift deployments.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F01%2Fautomated-migration-from-jboss-a-mq-6-to-red-hat-amq-7-on-red-hat-openshift%2F&amp;#38;linkname=Automated%20migration%20from%20JBoss%20AMQ%206%20to%20Red%20Hat%20AMQ%207%20on%20Red%20Hat%20OpenShift" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F01%2Fautomated-migration-from-jboss-a-mq-6-to-red-hat-amq-7-on-red-hat-openshift%2F&amp;#38;linkname=Automated%20migration%20from%20JBoss%20AMQ%206%20to%20Red%20Hat%20AMQ%207%20on%20Red%20Hat%20OpenShift" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F01%2Fautomated-migration-from-jboss-a-mq-6-to-red-hat-amq-7-on-red-hat-openshift%2F&amp;#38;linkname=Automated%20migration%20from%20JBoss%20AMQ%206%20to%20Red%20Hat%20AMQ%207%20on%20Red%20Hat%20OpenShift" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F01%2Fautomated-migration-from-jboss-a-mq-6-to-red-hat-amq-7-on-red-hat-openshift%2F&amp;#38;linkname=Automated%20migration%20from%20JBoss%20AMQ%206%20to%20Red%20Hat%20AMQ%207%20on%20Red%20Hat%20OpenShift" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F01%2Fautomated-migration-from-jboss-a-mq-6-to-red-hat-amq-7-on-red-hat-openshift%2F&amp;#38;linkname=Automated%20migration%20from%20JBoss%20AMQ%206%20to%20Red%20Hat%20AMQ%207%20on%20Red%20Hat%20OpenShift" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F01%2Fautomated-migration-from-jboss-a-mq-6-to-red-hat-amq-7-on-red-hat-openshift%2F&amp;#38;linkname=Automated%20migration%20from%20JBoss%20AMQ%206%20to%20Red%20Hat%20AMQ%207%20on%20Red%20Hat%20OpenShift" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F01%2Fautomated-migration-from-jboss-a-mq-6-to-red-hat-amq-7-on-red-hat-openshift%2F&amp;#38;linkname=Automated%20migration%20from%20JBoss%20AMQ%206%20to%20Red%20Hat%20AMQ%207%20on%20Red%20Hat%20OpenShift" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F01%2Fautomated-migration-from-jboss-a-mq-6-to-red-hat-amq-7-on-red-hat-openshift%2F&amp;#38;linkname=Automated%20migration%20from%20JBoss%20AMQ%206%20to%20Red%20Hat%20AMQ%207%20on%20Red%20Hat%20OpenShift" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F01%2Fautomated-migration-from-jboss-a-mq-6-to-red-hat-amq-7-on-red-hat-openshift%2F&amp;#038;title=Automated%20migration%20from%20JBoss%20AMQ%206%20to%20Red%20Hat%20AMQ%207%20on%20Red%20Hat%20OpenShift" data-a2a-url="https://developers.redhat.com/blog/2019/05/01/automated-migration-from-jboss-a-mq-6-to-red-hat-amq-7-on-red-hat-openshift/" data-a2a-title="Automated migration from JBoss AMQ 6 to Red Hat AMQ 7 on Red Hat OpenShift"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/05/01/automated-migration-from-jboss-a-mq-6-to-red-hat-amq-7-on-red-hat-openshift/"&gt;Automated migration from JBoss AMQ 6 to Red Hat AMQ 7 on Red Hat OpenShift&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/omyEn8O2tHo" height="1" width="1" alt=""/&gt;</content><summary>Since Red Hat OpenShift Container Platform was first released, Red Hat Middleware products were provided to deploy on it and help developers to build more complex solutions. Messaging Brokers are a very important piece in most new application architectures, such as microservices, event sourcing, and CQRS. Red Hat JBoss AMQ was provided from the beginning to deploy Messaging Brokers on Red Hat Open...</summary><dc:creator>Roman Martin Gil</dc:creator><dc:date>2019-05-01T07:00:58Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/05/01/automated-migration-from-jboss-a-mq-6-to-red-hat-amq-7-on-red-hat-openshift/</feedburner:origLink></entry><entry><title>Manage your APIs deployed with Istio service mesh</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/pA7uD_26eaY/" /><category term="API" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="istio" scheme="searchisko:content:tags" /><category term="microservices" scheme="searchisko:content:tags" /><category term="Red Hat Integration" scheme="searchisko:content:tags" /><category term="service mesh" scheme="searchisko:content:tags" /><author><name>Nicolas Massé</name></author><id>searchisko:content:id:jbossorg_blog-manage_your_apis_deployed_with_istio_service_mesh</id><updated>2019-04-30T07:00:09Z</updated><published>2019-04-30T07:00:09Z</published><content type="html">&lt;p&gt;With the rise of &lt;a href="https://developers.redhat.com/topics/microservices/"&gt;microservices&lt;/a&gt; architectures, companies are looking for a way to connect, secure, control, and observe their microservices. Currently, &lt;a href="https://developers.redhat.com/topics/service-mesh/"&gt;a service mesh such as Istio&lt;/a&gt; is the best option to reach this goal.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;b&gt;Connect&lt;/b&gt;: Istio can intelligently control the flow of traffic between services, conduct a range of tests and upgrade gradually with blue/green deployments.&lt;/li&gt; &lt;li&gt;&lt;b&gt;Secure&lt;/b&gt;: Automatically secure your services through managed authentication, authorization, and encryption of communication between services.&lt;/li&gt; &lt;li&gt;&lt;b&gt;Control&lt;/b&gt;: Apply policies and ensure that they are enforced and that resources are fairly distributed among consumers.&lt;/li&gt; &lt;li&gt;&lt;b&gt;Observe&lt;/b&gt;: See what’s happening with rich automatic tracing, monitoring, logging of all your services.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;And, as explained in &lt;a href="https://developers.redhat.com/blog/2019/03/12/distributed-microservices-architecture-enterprise-integration-istio-and-managed-api-gateways/"&gt;&amp;#8220;Distributed microservices architecture: Istio, managed API gateways and, enterprise integration&amp;#8221;&lt;/a&gt;, a service mesh does not relieve the need for an API management solution. A service mesh manages services and the connections between them, whereas an API management solution manages APIs and their consumers. In this article, I&amp;#8217;ll describe how to manage APIs using the Red Hat Integration adapter for Istio.&lt;/p&gt; &lt;p&gt;&lt;span id="more-588877"&gt;&lt;/span&gt;Red Hat Integration offers an API management capability that let companies build an ecosystem of consumers around their APIs and then drive new revenue from them.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;b&gt;Visibility&lt;/b&gt;: Get insights on your APIs usage (most used methods of your API, top consuming applications, API Health, etc.).&lt;/li&gt; &lt;li&gt;&lt;b&gt;Control&lt;/b&gt;: Manage the client applications and their consumption (quotas, SLAs, pricing, etc.).&lt;/li&gt; &lt;li&gt;&lt;b&gt;Monetization&lt;/b&gt;: Drive new revenue with per-usage pricing.&lt;/li&gt; &lt;li&gt;&lt;b&gt;Hybrid API management&lt;/b&gt;: Connect APIs wherever they are (on-premises, SaaS, or in various cloud providers), manage them from a single location.&lt;/li&gt; &lt;li&gt;&lt;b&gt;API lifecycle&lt;/b&gt;: Scale from an idea to the realization, from the inception of an API program up to management at scale throughout your whole company (see “&lt;a href="https://developers.redhat.com/blog/2019/02/25/full-api-lifecycle-management-a-primer/"&gt;Full API lifecycle management: A primer&lt;/a&gt;” for more information).&lt;/li&gt; &lt;/ul&gt; &lt;h2&gt;When APIs meet the service mesh&lt;/h2&gt; &lt;p&gt;The latest release of Red Hat Integration adds an Istio adapter that connects the Istio service mesh to it so that you can upgrade any service in your service mesh to a full-featured API.&lt;/p&gt; &lt;p&gt;This adapter brings to the Istio service mesh the API management capabilities of Red Hat Integration:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Developer self-service and on-boarding&lt;/li&gt; &lt;li&gt;API documentation&lt;/li&gt; &lt;li&gt;Monetization&lt;/li&gt; &lt;li&gt;Usage analytics&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;In Istio, an adapter is a pluggable component that handles various aspects of the service mesh. An adapter can handle aspects such as Authorization and Telemetry, for example. The Red Hat Integration adapter plugs in the Mixer component to validate an API Key (Authorization) and report usage (Telemetry).&lt;/p&gt; &lt;p&gt;&lt;img class=" size-medium wp-image-591157 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/04/Manage-your-APIs-deployed-in-the-Istio-Service-Mesh-Schemas-e1556092416723.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/04/Manage-your-APIs-deployed-in-the-Istio-Service-Mesh-Schemas-e1556092416723-300x208.png" alt="" width="300" height="208" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/04/Manage-your-APIs-deployed-in-the-Istio-Service-Mesh-Schemas-e1556092416723-300x208.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/04/Manage-your-APIs-deployed-in-the-Istio-Service-Mesh-Schemas-e1556092416723-768x532.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2019/04/Manage-your-APIs-deployed-in-the-Istio-Service-Mesh-Schemas-e1556092416723.png 780w" sizes="(max-width: 300px) 100vw, 300px" /&gt;&lt;/p&gt; &lt;h2&gt;Tutorial&lt;/h2&gt; &lt;p&gt;In the rest of this article, I&amp;#8217;ll describe the first steps for using the Red Hat Integration adapter. These steps assume Istio is already &lt;a href="https://maistra.io/docs/getting_started/install/"&gt;installed on your Minishift instance&lt;/a&gt; or &lt;a href="https://docs.openshift.com/container-platform/3.11/servicemesh-install/servicemesh-install.html"&gt;on your Red Hat OpenShift cluster&lt;/a&gt;, as well as &lt;a href="https://access.redhat.com/documentation/en-us/red_hat_3scale_api_management/2.4/html/infrastructure/onpremises-installation"&gt;Red Hat Integration&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Before managing APIs in the service mesh, we need to deploy a few sample components in it: start by deploying the bookstore application &lt;a href="https://maistra.io/docs/examples/bookinfo/"&gt;as explained here&lt;/a&gt;:&lt;/p&gt; &lt;pre&gt;oc new-project bookstore oc adm policy add-scc-to-user privileged -z default -n bookstore oc adm policy add-scc-to-user anyuid -z default -n bookstore oc apply -n bookstore -f https://raw.githubusercontent.com/Maistra/bookinfo/master/bookinfo.yaml oc apply -n bookstore -f https://raw.githubusercontent.com/Maistra/bookinfo/master/bookinfo-gateway.yaml &lt;/pre&gt; &lt;p&gt;Confirm the bookstore application is working with:&lt;/p&gt; &lt;pre&gt;$ export GATEWAY_URL=$(oc get route -n istio-system istio-ingressgateway -o jsonpath='{.spec.host}') $ curl -s http://$GATEWAY_URL/api/v1/products |jq [ { "descriptionHtml": "&amp;#60;a href=\"https://en.wikipedia.org/wiki/The_Comedy_of_Errors\"&amp;#62;Wikipedia Summary&amp;#60;/a&amp;#62;: The Comedy of Errors is one of &amp;#60;b&amp;#62;William Shakespeare's&amp;#60;/b&amp;#62; early plays. It is his shortest and one of his most farcical comedies, with a major part of the humour coming from slapstick and mistaken identity, in addition to puns and word play.", "id": 0, "title": "The Comedy of Errors" } ] &lt;/pre&gt; &lt;p&gt;As you can see, the bookstore application exposes an API which is not yet managed (anyone can query it freely).&lt;/p&gt; &lt;p&gt;Discover how to manage this API using the Red Hat Integration adapter for Istio in the following video.&lt;/p&gt; &lt;p&gt;&lt;iframe class='youtube-player' type='text/html' width='640' height='360' src='https://www.youtube.com/embed/fV9z_zq7YLs?version=3&amp;#038;rel=1&amp;#038;fs=1&amp;#038;autohide=2&amp;#038;showsearch=0&amp;#038;showinfo=1&amp;#038;iv_load_policy=1&amp;#038;wmode=transparent' allowfullscreen='true' style='border:0;'&gt;&lt;/iframe&gt;&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F30%2Fmanage-your-apis-deployed-with-istio-service-mesh%2F&amp;#38;linkname=Manage%20your%20APIs%20deployed%20with%20Istio%20service%20mesh" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F30%2Fmanage-your-apis-deployed-with-istio-service-mesh%2F&amp;#38;linkname=Manage%20your%20APIs%20deployed%20with%20Istio%20service%20mesh" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F30%2Fmanage-your-apis-deployed-with-istio-service-mesh%2F&amp;#38;linkname=Manage%20your%20APIs%20deployed%20with%20Istio%20service%20mesh" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F30%2Fmanage-your-apis-deployed-with-istio-service-mesh%2F&amp;#38;linkname=Manage%20your%20APIs%20deployed%20with%20Istio%20service%20mesh" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F30%2Fmanage-your-apis-deployed-with-istio-service-mesh%2F&amp;#38;linkname=Manage%20your%20APIs%20deployed%20with%20Istio%20service%20mesh" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F30%2Fmanage-your-apis-deployed-with-istio-service-mesh%2F&amp;#38;linkname=Manage%20your%20APIs%20deployed%20with%20Istio%20service%20mesh" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F30%2Fmanage-your-apis-deployed-with-istio-service-mesh%2F&amp;#38;linkname=Manage%20your%20APIs%20deployed%20with%20Istio%20service%20mesh" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F30%2Fmanage-your-apis-deployed-with-istio-service-mesh%2F&amp;#38;linkname=Manage%20your%20APIs%20deployed%20with%20Istio%20service%20mesh" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F30%2Fmanage-your-apis-deployed-with-istio-service-mesh%2F&amp;#038;title=Manage%20your%20APIs%20deployed%20with%20Istio%20service%20mesh" data-a2a-url="https://developers.redhat.com/blog/2019/04/30/manage-your-apis-deployed-with-istio-service-mesh/" data-a2a-title="Manage your APIs deployed with Istio service mesh"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/04/30/manage-your-apis-deployed-with-istio-service-mesh/"&gt;Manage your APIs deployed with Istio service mesh&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/pA7uD_26eaY" height="1" width="1" alt=""/&gt;</content><summary>With the rise of microservices architectures, companies are looking for a way to connect, secure, control, and observe their microservices. Currently, a service mesh such as Istio is the best option to reach this goal. Connect: Istio can intelligently control the flow of traffic between services, conduct a range of tests and upgrade gradually with blue/green deployments. Secure: Automatically secu...</summary><dc:creator>Nicolas Massé</dc:creator><dc:date>2019-04-30T07:00:09Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/04/30/manage-your-apis-deployed-with-istio-service-mesh/</feedburner:origLink></entry><entry><title>Stack Clash mitigation in GCC: Why -fstack-check is not the answer</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/VCZs3Y_8Gj0/" /><category term="C++" scheme="searchisko:content:tags" /><category term="Developer Tools" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="gcc" scheme="searchisko:content:tags" /><category term="Programming Languages" scheme="searchisko:content:tags" /><category term="security" scheme="searchisko:content:tags" /><author><name>Jeff Law</name></author><id>searchisko:content:id:jbossorg_blog-stack_clash_mitigation_in_gcc_why_fstack_check_is_not_the_answer</id><updated>2019-04-30T07:00:05Z</updated><published>2019-04-30T07:00:05Z</published><content type="html">&lt;p&gt;In our &lt;a href="https://developers.redhat.com/blog/2017/09/25/stack-clash-mitigation-gcc-background/"&gt;previous article about Stack Clash&lt;/a&gt;, we covered the basics of the &lt;a href="https://www.qualys.com/2017/06/19/stack-clash/stack-clash.txt"&gt;Stack Clash&lt;/a&gt; vulnerability. To summarize, an attacker first uses various means to bring the heap and stack close together. A large stack allocation is then used to &amp;#8220;jump the stack guard.&amp;#8221; Subsequent stores into the stack may modify objects in the heap or vice versa. This, in turn, can be used by attackers to gain control over applications.&lt;/p&gt; &lt;p&gt;GCC has a capability (&lt;code&gt;-fstack-check&lt;/code&gt;), which looked promising for mitigating Stack Clash attacks. This article will cover how &lt;code&gt;-fstack-check&lt;/code&gt; works and why it is insufficient for mitigating Stack Clash attacks.&lt;span id="more-583917"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;Background&lt;/h2&gt; &lt;p&gt;GCC has a flag, &lt;code&gt;-fstack-check&lt;/code&gt;, that is used to probe stack allocations. Carefully probing stack allocations can prevent the stack and heap from colliding and thus protect against Stack Clash attacks. So, can we use &lt;code&gt;-fstack-check&lt;/code&gt; to prevent the stack and heap from colliding? We must understand the design/implementation decisions for &lt;code&gt;-fstack-check&lt;/code&gt; before determining whether it&amp;#8217;s appropriate for Stack Clash mitigation.&lt;/p&gt; &lt;p&gt;Ada programs enable &lt;code&gt;-fstack-check&lt;/code&gt; to detect infinite recursion and stack overflows between different threads. Detection of either condition must result in the program reporting an error (typically via a userspace signal handler).&lt;/p&gt; &lt;p&gt;Requiring the program to run a signal handler on error implies that enough stack is always available for the signal handler to execute. Thus, &lt;code&gt;-fstack-check&lt;/code&gt; must probe beyond the current function&amp;#8217;s actual stack requirements to ensure stack space is available for the signal handler.&lt;/p&gt; &lt;p&gt;Also, the entire program is assumed to be compiled with &lt;code&gt;-fstack-check&lt;/code&gt; (a reasonable assumption if you&amp;#8217;re writing Ada code).&lt;/p&gt; &lt;p&gt;The combination of those two properties is critical. Because each function probes 1-3 pages beyond its current need, any functions that are subsequently called can skip the first 1-3 pages when they probe. For example, consider this code:&lt;/p&gt; &lt;pre class="brush: cpp; title: ; notranslate"&gt; extern void bar (char *); void foo(void) { char z[8192]; bar (z); } &lt;/pre&gt; &lt;p&gt;Compiled with &lt;code&gt;-O2 -fstack-check&lt;/code&gt; results in:&lt;/p&gt; &lt;pre class="brush: plain; title: ; notranslate"&gt; subq $12328, %rsp orq $0, 4104(%rsp) orq $0, 8(%rsp) orq $0, (%rsp) addq $4128, %rsp &lt;/pre&gt; &lt;p&gt;The first instruction allocates 12328 bytes of stack space (again, more than it needs so that there is always sufficient stack to run a userspace signal handler). At that point, we&amp;#8217;ve already lost because that allocation could jump the stack guard and subsequent stores could be writing into the heap. The probes do not touch every allocated page. Finally, you&amp;#8217;ll note that the orq instructions (the probes) write addresses beyond the currently allocated stack. This causes significant problems for critical tools such as Valgrind.&lt;/p&gt; &lt;h2&gt;Using -fstack-check is insufficient for mixed environments&lt;/h2&gt; &lt;p&gt;Outside the Ada world, we must assume a mixed environment. The most common scenario would be to have key libraries (e.g., glibc) provided by an OS vendor interacting with userspace code provided by an ISV or customer.&lt;/p&gt; &lt;p&gt;In this case, the OS vendor may have compiled the system libraries with stack checking, but the OS vendor has no control over whether or not ISVs or customers compile their code with stack checking. Let&amp;#8217;s consider what can happen in that scenario.&lt;/p&gt; &lt;p&gt;To begin, let&amp;#8217;s assume the customer code does not have any large stack allocations (perhaps that&amp;#8217;s why they compiled without &lt;code&gt;-fstack-check&lt;/code&gt;). However, the customer code has a memory leak. Assume the customer code calls into one of the glibc routines that have large stacks, and that glibc was compiled with &lt;code&gt;-fstack-check&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;This seems like a safe combination, but it is not.&lt;/p&gt; &lt;p&gt;Next, exploit a memory leak to bring the stack and heap close (perhaps within a page) to each other. Then call a glibc routine with a large stack. If the glibc routine were compiled with &lt;code&gt;-fstack-check&lt;/code&gt;, then it would skip probing the first 1-3 pages (due to the design decisions/assumptions of &lt;code&gt;-fstack-check&lt;/code&gt;). The stack pointer would now point into the heap, and stores into the stack would actually modify the heap. The stack and heap have clashed, and now there is a reasonable chance an attacker could build an exploit to gain complete control of the program.&lt;/p&gt; &lt;h2&gt;More issues with -fstack-check&lt;/h2&gt; &lt;p&gt;On some targets, the current &lt;code&gt;-fstack-check&lt;/code&gt; implementation allocates stack space all at once, then probes at page intervals within the just allocated stack. So, what happens if the program has a signal handler installed and receives an asynchronous signal between the allocation of the stack space and probing of the pages?&lt;/p&gt; &lt;p&gt;In that case, the stack pointer could be pointing beyond the guard into the heap. The signal arrives and the kernel transfers control to the registered signal handler. That signal handler is then running while its stack is pointing into the heap. Thus, the attacker has clashed the stack and heap, and there&amp;#8217;s a reasonable chance they can gain control over the program.&lt;/p&gt; &lt;p&gt;To exploit this scenario, the signal delivery must occur at the right point (after stack allocation, but before probing). This further illustrates the attention to detail that is needed to protect systems from Stack Clash style attacks.&lt;/p&gt; &lt;p&gt;So what should we do? Stay tuned for more details in future articles.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F30%2Fstack-clash-mitigation-in-gcc-why-fstack-check-is-not-the-answer%2F&amp;#38;linkname=Stack%20Clash%20mitigation%20in%20GCC%3A%20Why%20-fstack-check%20is%20not%20the%20answer" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F30%2Fstack-clash-mitigation-in-gcc-why-fstack-check-is-not-the-answer%2F&amp;#38;linkname=Stack%20Clash%20mitigation%20in%20GCC%3A%20Why%20-fstack-check%20is%20not%20the%20answer" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F30%2Fstack-clash-mitigation-in-gcc-why-fstack-check-is-not-the-answer%2F&amp;#38;linkname=Stack%20Clash%20mitigation%20in%20GCC%3A%20Why%20-fstack-check%20is%20not%20the%20answer" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F30%2Fstack-clash-mitigation-in-gcc-why-fstack-check-is-not-the-answer%2F&amp;#38;linkname=Stack%20Clash%20mitigation%20in%20GCC%3A%20Why%20-fstack-check%20is%20not%20the%20answer" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F30%2Fstack-clash-mitigation-in-gcc-why-fstack-check-is-not-the-answer%2F&amp;#38;linkname=Stack%20Clash%20mitigation%20in%20GCC%3A%20Why%20-fstack-check%20is%20not%20the%20answer" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F30%2Fstack-clash-mitigation-in-gcc-why-fstack-check-is-not-the-answer%2F&amp;#38;linkname=Stack%20Clash%20mitigation%20in%20GCC%3A%20Why%20-fstack-check%20is%20not%20the%20answer" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F30%2Fstack-clash-mitigation-in-gcc-why-fstack-check-is-not-the-answer%2F&amp;#38;linkname=Stack%20Clash%20mitigation%20in%20GCC%3A%20Why%20-fstack-check%20is%20not%20the%20answer" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F30%2Fstack-clash-mitigation-in-gcc-why-fstack-check-is-not-the-answer%2F&amp;#38;linkname=Stack%20Clash%20mitigation%20in%20GCC%3A%20Why%20-fstack-check%20is%20not%20the%20answer" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F30%2Fstack-clash-mitigation-in-gcc-why-fstack-check-is-not-the-answer%2F&amp;#038;title=Stack%20Clash%20mitigation%20in%20GCC%3A%20Why%20-fstack-check%20is%20not%20the%20answer" data-a2a-url="https://developers.redhat.com/blog/2019/04/30/stack-clash-mitigation-in-gcc-why-fstack-check-is-not-the-answer/" data-a2a-title="Stack Clash mitigation in GCC: Why -fstack-check is not the answer"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/04/30/stack-clash-mitigation-in-gcc-why-fstack-check-is-not-the-answer/"&gt;Stack Clash mitigation in GCC: Why -fstack-check is not the answer&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/VCZs3Y_8Gj0" height="1" width="1" alt=""/&gt;</content><summary>In our previous article about Stack Clash, we covered the basics of the Stack Clash vulnerability. To summarize, an attacker first uses various means to bring the heap and stack close together. A large stack allocation is then used to “jump the stack guard.” Subsequent stores into the stack may modify objects in the heap or vice versa. This, in turn, can be used by attackers to gain control over a...</summary><dc:creator>Jeff Law</dc:creator><dc:date>2019-04-30T07:00:05Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/04/30/stack-clash-mitigation-in-gcc-why-fstack-check-is-not-the-answer/</feedburner:origLink></entry></feed>
